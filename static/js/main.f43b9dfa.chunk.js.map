{"version":3,"sources":["getOpenStreetMapAmenities.ts","DrinkingWaterMarker.tsx","PublicToiletsMarker.tsx","PublicShowerMarker.tsx","MenuIcon.tsx","Popup.tsx","osm.ts","form.tsx","UpsertNode.tsx","BottomSheet.tsx","Map.tsx","serviceWorkerRegistration.ts","ServiceWorkerWrapper.tsx","App.tsx","index.tsx"],"names":["amenities","updateCachedItems","newNodes","a","localforage","cachedItems","nodes","uniqBy","concat","i","id","options","formData","join","around","lat","lng","fetch","res","json","elements","props","width","size","height","viewBox","enableBackground","xmlSpace","fill","cx","cy","r","d","transform","rx","ry","style","background","color","borderRadius","points","Popup","className","display","isOpen","hAlignContent","vAlignContent","onClick","e","stopPropagation","onClose","shrink","column","children","_osmAuth","require","osmAuth","xmlBuilder","Builder","client_id","client_secret","redirect_uri","scope","osmApi","Promise","resolve","reject","xhr","err","result","osmPut","method","path","headers","content","buildObject","wrapInChangeset","changesetComment","mutation","osm","changeset","tag","$","k","v","changesetId","osmUpdateNode","node","tags","amenity","Accept","then","JSON","parse","fetchedNode","lon","version","Object","keys","filter","t","map","osmCreateNode","nodeId","parseInt","Select","label","value","onChange","currentTarget","o","Input","Checkbox","checked","type","Button","UpsertNodePopup","React","state","updateState","editNodeTag","authenticated","marginTop","marginLeft","flexShrink","authenticate","position","top","left","right","bottom","zIndex","pointerEvents","fontSize","grow","paddingTop","paddingBottom","paddingRight","paddingLeft","marginRight","coordinates","getCenter","margin","textAlign","getTitle","access","fee","charge","unisex","changing_table","hot_water","wheelchair","getForm","onDone","Amenity","fontWeight","marginBottom","capitalize","wordBreak","sheetRef","useRef","useState","updateOpen","useEffect","includes","openUrl","url","window","open","ref","onDismiss","onSpringEnd","snapPoints","maxHeight","innerHeight","defaultSnap","expandOnContentDrag","padding","minHeight","DrinkingWaterMarker","PublicToiletsMarker","PublicShowerMarker","icon","borderTop","borderBottom","flexGrow","mapillary","onEditNode","mapboxgl","MapFountains","openedNode","upsertNode","isMenuOpen","showRadius","showDrinkingWater","showShowers","showToilets","continousSearch","showSearchThisAreaButton","none","circleRadius","loadingBarRef","previousCenter","updateCachedAmenities","getItem","items","addAmenitiesMarkers","distance","units","updateAmenities","current","continuousStart","getOpenStreetMapAmenities","complete","updateAmenitiesDebounce","debounce","setState","addMarkers","markerElement","show","forEach","element","document","createElement","ReactDOM","marker","Marker","setLngLat","addTo","accessToken","navigator","geolocation","getCurrentPosition","Map","container","center","coords","latitude","longitude","zoom","scrollZoom","test","userAgent","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","NavigationControl","showZoom","showCompass","ScaleControl","on","some","querySelector","click","requestAnimationFrame","setCenter","setRadius","MapboxCircle","editable","minRadius","fillColor","this","remove","initializeMap","resize","values","BottomSheet","isSome","MenuIcon","min","max","step","setItem","hideRadius","drinkingWaterNodes","toiletsNodes","showerNodes","isLocalhost","Boolean","location","hostname","match","register","config","URL","process","href","origin","addEventListener","swUrl","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ServiceWorkerWrapper","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","fromNullable","waiting","textDecoration","cursor","ww","postMessage","App","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f43b9dfa.chunk.js","sourcesContent":["import * as localforage from \"localforage\";\nimport uniqBy from \"lodash/uniqBy\";\n\nimport \"localforage-getitems\";\n\ntype AmenityTags = { mapillary?: string } & (\n  | {\n      amenity: \"drinking_water\";\n    }\n  | {\n      amenity: \"toilets\";\n      access?: \"yes\" | \"public\" | \"permissive\" | \"unknown\";\n      changing_table?: \"yes\" | \"no\" | \"unknown\";\n      fee?: \"yes\" | \"no\" | \"unknown\";\n      charge?: string;\n      wheelchair?: \"yes\" | \"no\" | \"unknown\" | \"limited\";\n      unisex?: \"yes\" | \"male\" | \"female\";\n    }\n  | {\n      amenity: \"shower\";\n      access?: \"yes\" | \"public\" | \"permissive\" | \"unknown\";\n      hot_water?: \"yes\" | \"no\" | \"unknown\";\n      fee?: \"yes\" | \"no\" | \"unknown\";\n      charge?: string;\n      wheelchair?: \"yes\" | \"no\" | \"unknown\" | \"limited\";\n    }\n);\n\nexport type OpenStreetMapNode = {\n  id: number;\n  lat: number;\n  lon: number;\n  tags: AmenityTags;\n};\n\nconst amenities = [\"drinking_water\", \"toilets\", \"shower\"] as const;\n\nexport type Amenity = typeof amenities[number];\n\nexport type Options = {\n  around: number;\n  lat: number;\n  lng: number;\n};\n\nexport const updateCachedItems = async (newNodes: OpenStreetMapNode[]) => {\n  const cachedItems =\n    (await localforage.getItem<OpenStreetMapNode[]>(\"amenities\")) || [];\n\n  const nodes = uniqBy(newNodes.concat(cachedItems), i => i.id);\n\n  // fire&forget\n  localforage.setItem(\"amenities\", nodes);\n};\n\nexport default async (options: Options): Promise<OpenStreetMapNode[]> => {\n  const formData = `\n    [out:json];\n    (node[\"amenity\"~\"${amenities.join(\"|\")}\"](around:${options.around},${\n    options.lat\n  },${options.lng}););\n    out;>;out;\n  `;\n\n  // const OverpassApiService = 'https://overpass-api.de/api/interpreter'\n  const OverpassApiService = \"https://overpass.kumi.systems/api/interpreter\";\n\n  const res = await fetch(`${OverpassApiService}?data=${formData}&output`);\n\n  const json: { elements: OpenStreetMapNode[] } = await res.json();\n\n  updateCachedItems(json.elements);\n\n  return json.elements;\n};\n","import * as React from \"react\";\n\nexport default (props: { size: number }) => (\n  <svg\n    width={props.size}\n    height={props.size}\n    viewBox=\"0 0 508 508\"\n    enableBackground=\"new 0 0 508 508\"\n    xmlSpace=\"preserve\"\n  >\n    <circle fill=\"#324A5E\" cx=\"254\" cy=\"254\" r=\"254\" />\n    <path\n      fill=\"#54C0EB\"\n      d=\"M252,414h4c62.8,0,115.2-50.4,114-113.2c0-8-1.2-15.6-2.8-22.8C360,246.4,324,210,298,170.8  c-27.2-37.6-44-77.6-44-76.4c-0.4-0.8-17.2,39.2-44,76.4c-25.6,39.2-62,76-69.2,106.8c-2,7.2-2.8,14.8-2.8,22.8  C136.8,363.2,189.2,414,252,414z\"\n    />\n    <g>\n      <path\n        fill=\"#84DBFF\"\n        d=\"M177.2,353.6c6-0.4,9.6-6,7.2-10.8c-3.2-7.2-6-14.8-7.2-22.8c-1.6-8-2-15.6-1.6-23.2   c1.2-32,32-75.2,51.6-118.4c2-3.6,3.6-7.6,5.2-11.2c-0.8,1.2-1.6,2.4-2.4,3.2c-26.4,40.4-64,78.8-70.8,110   c-1.6,7.2-2.4,15.2-2.4,23.2c0.4,16.8,4.8,32,12.4,46C171.2,352.4,174,354,177.2,353.6L177.2,353.6z\"\n      />\n\n      <ellipse\n        transform=\"matrix(-0.042 -0.9991 0.9991 -0.042 -169.3631 569.6013)\"\n        fill=\"#84DBFF\"\n        cx=\"188.401\"\n        cy=\"365.998\"\n        rx=\"8.4\"\n        ry=\"9.2\"\n      />\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\n\nexport default (props: { color: string; size: number }) => (\n  <svg\n    width={props.size}\n    height={props.size}\n    viewBox=\"0 0 395 395\"\n    xmlSpace=\"preserve\"\n    fill=\"black\"\n    style={{ background: props.color, borderRadius: props.size / 6 }}\n  >\n    <g>\n      <path d=\"M229.412,130.862c-2.405-3.355-6.284-5.346-10.412-5.346h-1.266c-5.524,0-10.424,3.539-12.161,8.782l-27.534,83.09   l-27.662-83.107c-1.743-5.233-6.639-8.765-12.156-8.765h-0.822c-0.051,0-0.104,0.003-0.153,0.003c-0.053,0-0.105-0.003-0.155-0.003   h-0.998c-5.524,0-10.425,3.539-12.163,8.782l-27.533,83.09l-27.661-83.107c-1.742-5.233-6.64-8.765-12.156-8.765h-1.268   c-4.13,0-8.007,1.991-10.414,5.346c-2.407,3.357-3.045,7.669-1.72,11.579l40.125,118.344c1.763,5.201,6.643,8.698,12.135,8.698   h0.53c0.153,0,0.303-0.008,0.455-0.014c0.151,0.006,0.302,0.014,0.454,0.014h0.354c5.5,0,10.386-3.511,12.142-8.721l27.845-82.675   l27.718,82.657c1.751,5.221,6.642,8.739,12.148,8.739h0.527c0.153,0,0.303-0.008,0.456-0.014c0.15,0.006,0.302,0.014,0.454,0.014   h0.355c5.491,0,10.37-3.497,12.134-8.698l40.125-118.344C232.459,138.531,231.818,134.22,229.412,130.862z\" />\n      <path d=\"M347.88,232.295c-4.756-4.416-12.063-4.578-17.01-0.378c-8.521,7.234-19.511,11.218-30.943,11.218   c-26.069,0-47.277-20.51-47.277-45.721c0-25.116,21.208-45.548,47.277-45.548c11.542,0,22.522,3.916,30.921,11.027   c5.087,4.306,12.625,3.995,17.339-0.719l0.427-0.427c2.544-2.542,3.899-6.036,3.74-9.628c-0.161-3.592-1.822-6.952-4.58-9.258   c-13.371-11.184-30.366-17.344-47.848-17.344c-40.598,0-73.628,32.253-73.628,71.898c0,39.739,33.03,72.07,73.628,72.07   c17.454,0,34.493-6.207,47.979-17.48c2.822-2.36,4.495-5.817,4.589-9.494c0.098-3.678-1.393-7.22-4.087-9.723L347.88,232.295z\" />\n      <path d=\"M313.001,0H81.999C36.785,0,0,36.784,0,81.998v230.993C0,358.211,36.785,395,81.999,395h231.002   C358.216,395,395,358.211,395,312.991V81.998C395,36.784,358.216,0,313.001,0z M380,312.991C380,349.94,349.945,380,313.001,380   H81.999C45.056,380,15,349.94,15,312.991V81.998C15,45.055,45.056,15,81.999,15h231.002C349.945,15,380,45.055,380,81.998V312.991z   \" />\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\n\nexport default (props: { color: string; size: number }) => (\n  <svg\n    enableBackground=\"new -0.258 -0.548 123.547 123.539\"\n    xmlSpace=\"preserve\"\n    viewBox=\"-0.258 -0.548 123.547 123.539\"\n    width={props.size}\n    height={props.size}\n  >\n    <g>\n      <path\n        fill=\"#231F20\"\n        d=\"m109.63 123.6c8.148 0 14.766-6.586 14.766-14.742v-94.02c0-8.156-6.617-14.773-14.766-14.773h-94.013c-8.156 0-14.758 6.617-14.758 14.773v94.016c0 8.156 6.602 14.742 14.758 14.742h94.013z\"\n      />\n      <path\n        fill={props.color}\n        d=\"m15.617 2.559c-6.758 0-12.258 5.516-12.258 12.281v94.016c0 6.734 5.5 12.234 12.258 12.234h94.016c6.758 0 12.25-5.5 12.25-12.234v-94.02c0-6.766-5.492-12.281-12.25-12.281h-94.013z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m68.344 66.402c6.789 0 12.281-5.5 12.281-12.281 0-6.789-5.492-12.281-12.281-12.281s-12.297 5.492-12.297 12.281c0 6.781 5.508 12.281 12.297 12.281z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m56.766 96.254c0 1.32 1.062 3.055 2.398 3.055v-0.023h5.664v0.023c1.344 0 3.055-1.711 3.055-3.031v-10.446c0-1.32-1.711-3-3.055-3h-5.664c-1.25 0-2.266 1.586-2.398 2.781 8.164 0 8.109 10.641 0 10.641zm-5.149-25.922c1.312-1.273 3.102-2.031 5.055-2.031h24.219l24.367-24.438c5.227-5.25 12.062 1.562 6.836 6.812l-26.741 26.805 0.023 36.602h-32.062v-17.771h-14.484c-3.016 0-5.469-2.445-5.469-5.469 0-1.297 0.438-2.469 1.18-3.422l17.07-17.086z\"\n      />\n      <polygon\n        fill=\"#231F20\"\n        points=\"12.883 22.621 15.859 25.605 30.242 10.902 27.266 7.926 20.742 10.395 17.75 7.418 11.75 13.395 14.727 16.402\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m35.023 69.324c-0.281 1.812 0.969 3.445 2.734 3.688 1.781 0.297 3.469-1 3.688-2.734 0.273-1.805-0.953-3.438-2.742-3.688-1.773-0.266-3.445 0.953-3.68 2.734z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m37.844 61.902c0.242-1.703-0.914-3.266-2.609-3.516-1.695-0.242-3.258 0.93-3.508 2.617-0.242 1.734 0.93 3.242 2.617 3.492 1.679 0.267 3.273-0.929 3.5-2.593z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m34.242 53.535c0.219-1.617-0.867-3.102-2.477-3.352-1.609-0.219-3.086 0.883-3.32 2.492-0.234 1.641 0.867 3.078 2.469 3.32 1.609 0.275 3.109-0.897 3.328-2.46z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m30.641 45.16c0.219-1.516-0.812-2.93-2.344-3.148-1.539-0.219-2.93 0.828-3.148 2.344-0.219 1.531 0.828 2.906 2.344 3.148s2.945-0.859 3.148-2.344z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m27.039 36.785c0.211-1.445-0.781-2.781-2.203-2.977-1.453-0.195-2.766 0.781-2.969 2.219-0.211 1.469 0.766 2.734 2.195 2.977 1.446 0.219 2.782-0.805 2.977-2.219z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m18.57 27.699c-0.211 1.367 0.734 2.562 2.078 2.789 1.344 0.219 2.594-0.758 2.789-2.078 0.195-1.344-0.727-2.609-2.07-2.781-1.383-0.195-2.617 0.726-2.797 2.07z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m47.148 57.512c0.086-1.758 1.602-3.148 3.367-3.055 1.781 0.102 3.141 1.586 3.055 3.398-0.062 1.781-1.586 3.125-3.375 3.023-1.765-0.046-3.148-1.562-3.047-3.366z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m45.117 54.02c-1.68-0.07-3-1.492-2.898-3.219 0.086-1.688 1.523-2.984 3.211-2.906 1.695 0.094 2.977 1.508 2.898 3.219-0.07 1.71-1.508 2.976-3.211 2.906z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m40.055 47.137c-1.602-0.078-2.844-1.414-2.758-3.031 0.086-1.609 1.438-2.852 3.055-2.758 1.594 0.078 2.828 1.445 2.758 3.055-0.063 1.585-1.446 2.827-3.055 2.734z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m34.977 40.277c-1.516-0.078-2.695-1.344-2.609-2.883 0.086-1.516 1.367-2.688 2.891-2.609 1.516 0.07 2.688 1.367 2.609 2.875-0.056 1.516-1.368 2.711-2.891 2.617z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m29.914 33.418c-1.43-0.078-2.555-1.297-2.469-2.734 0.07-1.422 1.281-2.516 2.719-2.469 1.43 0.07 2.539 1.297 2.469 2.734-0.063 1.414-1.297 2.539-2.719 2.469z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m22.516 23.988c0.07-1.336 1.203-2.391 2.562-2.32 1.344 0.055 2.391 1.203 2.32 2.547-0.062 1.336-1.227 2.414-2.562 2.312-1.344-0.07-2.398-1.195-2.32-2.539z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m55.945 43.691c-1.781 0.102-3.328-1.266-3.391-3.047-0.094-1.812 1.305-3.32 3.086-3.398 1.75-0.07 3.281 1.273 3.352 3.102 0.102 1.734-1.258 3.273-3.047 3.343z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m52.078 35.27c0.086 1.633-1.18 3.055-2.859 3.125-1.672 0.07-3.109-1.195-3.18-2.852-0.078-1.688 1.219-3.078 2.891-3.18 1.648-0.07 3.062 1.196 3.148 2.907z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m45.172 30.191c0.07 1.539-1.125 2.859-2.688 2.93-1.562 0.078-2.914-1.125-2.977-2.656-0.078-1.594 1.148-2.906 2.711-2.984 1.532-0.071 2.868 1.124 2.954 2.71z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m38.258 25.113c0.062 1.445-1.047 2.688-2.5 2.734-1.453 0.07-2.711-1.047-2.773-2.492-0.055-1.461 1.078-2.68 2.531-2.758 1.429-0.07 2.672 1.055 2.742 2.516z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m26.469 20.277c-0.07-1.367 0.992-2.516 2.328-2.562 1.336-0.07 2.492 0.977 2.555 2.32s-0.977 2.492-2.32 2.539c-1.344 0.078-2.516-0.976-2.563-2.297z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m32.508 13.762c1.336-0.195 2.602 0.734 2.797 2.078s-0.734 2.609-2.086 2.781c-1.344 0.219-2.602-0.734-2.797-2.078-0.18-1.344 0.758-2.586 2.086-2.781z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m44.117 19.426c0.211 1.414-0.781 2.734-2.195 2.93-1.414 0.219-2.742-0.781-2.938-2.172-0.195-1.414 0.789-2.758 2.195-2.953 1.399-0.196 2.735 0.781 2.938 2.195z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m52.93 22.988c0.227 1.516-0.812 2.883-2.305 3.102-1.484 0.219-2.891-0.828-3.102-2.297-0.203-1.484 0.836-2.875 2.312-3.094 1.477-0.226 2.876 0.805 3.095 2.289z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m61.727 26.582c0.25 1.562-0.852 3-2.414 3.242-1.547 0.219-3.023-0.852-3.227-2.414-0.227-1.562 0.852-3.031 2.398-3.25 1.563-0.242 3.024 0.86 3.243 2.422z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m70.539 30.168c0.25 1.633-0.898 3.148-2.516 3.391-1.633 0.25-3.172-0.898-3.391-2.516-0.219-1.633 0.906-3.172 2.516-3.414 1.633-0.219 3.149 0.906 3.391 2.539z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m79.352 33.754c0.273 1.711-0.922 3.297-2.633 3.539-1.688 0.25-3.297-0.945-3.539-2.633-0.242-1.711 0.93-3.32 2.633-3.562 1.71-0.243 3.296 0.953 3.539 2.656z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m84.484 34.559c1.781-0.242 3.438 1.008 3.688 2.789 0.266 1.758-0.977 3.414-2.734 3.688-1.789 0.266-3.469-0.977-3.688-2.758-0.273-1.79 0.953-3.446 2.734-3.719z\"\n      />\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\n\nexport default () => (\n  <svg fill=\"#000000\" viewBox=\"0 0 30 30\" width=\"20px\" height=\"20px\">\n    <path d=\"M 3 7 A 1.0001 1.0001 0 1 0 3 9 L 27 9 A 1.0001 1.0001 0 1 0 27 7 L 3 7 z M 3 14 A 1.0001 1.0001 0 1 0 3 16 L 27 16 A 1.0001 1.0001 0 1 0 27 14 L 3 14 z M 3 21 A 1.0001 1.0001 0 1 0 3 23 L 27 23 A 1.0001 1.0001 0 1 0 27 21 L 3 21 z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport View from \"react-flexview\";\n\nexport const Popup = (props: {\n  children: JSX.Element | false | null | Array<JSX.Element | false | null>;\n  onClose: () => void;\n  isOpen: boolean;\n  style?: React.CSSProperties;\n}) => {\n  return (\n    <View\n      className=\"popup\"\n      style={{\n        ...props.style,\n        display: props.isOpen ? \"flex\" : \"none\"\n      }}\n      hAlignContent=\"center\"\n      vAlignContent=\"center\"\n      onClick={e => {\n        e.stopPropagation();\n        props.onClose();\n      }}\n      shrink={false}\n    >\n      <View\n        className=\"popup-content\"\n        column\n        onClick={e => {\n          e.stopPropagation();\n        }}\n      >\n        {props.children}\n      </View>\n    </View>\n  );\n};\n","import { OpenStreetMapNode } from \"./getOpenStreetMapAmenities\";\nimport localforage from \"localforage\";\n\n// import type OsmAuth from \"osm-auth\";\nconst _osmAuth = require(\"osm-auth\").osmAuth; // CJS named import\n\nimport { Builder } from \"xml2js\";\n\nconst xmlBuilder = new Builder();\n\nexport const osmAuth = new _osmAuth({\n  client_id: \"UzKLAo2Jaaq3uuekbiMxIBX4NQQk5NrVwqMtKZZT7tA\",\n  client_secret: \"qzp6Ydy22GiZKq0WZ-prWj1AVI9fNGOLsQckEhqRr6o\",\n  redirect_uri: \"https://francescocioria.github.io/fontanelle/\",\n  scope: \"write_api\"\n});\n\nconst osmApi = <R>(options: {\n  method: string;\n  path: string;\n  headers?: { [k: string]: string };\n  content?: string;\n}): Promise<R> => {\n  return new Promise((resolve, reject) => {\n    osmAuth.xhr(options, (err: any, result: any) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n};\n\nconst osmGet = <R>(options: { path: string }): Promise<R> =>\n  osmApi<string>({\n    method: \"GET\",\n    path: options.path,\n    headers: {\n      Accept: \"application/json\"\n    }\n  }).then(JSON.parse);\n\nconst osmPut = <R>(options: {\n  path: string;\n  content: { osm?: { [k in \"node\" | \"changeset\"]?: object } };\n}) => {\n  return osmApi<R>({\n    method: \"PUT\",\n    path: options.path,\n    headers: { \"Content-Type\": \"text/xml\" },\n    content: xmlBuilder.buildObject(options.content)\n  });\n};\n\nconst wrapInChangeset = async <R>(\n  changesetComment: string,\n  mutation: (changesetId: string) => Promise<R>\n) => {\n  const changesetId = await osmPut<string>({\n    path: \"/api/0.6/changeset/create\",\n\n    content: {\n      osm: { changeset: { tag: { $: { k: \"comment\", v: changesetComment } } } }\n    }\n  });\n\n  const res = await mutation(changesetId);\n\n  await osmPut({\n    path: `/api/0.6/changeset/${changesetId}/close`,\n    content: {}\n  });\n\n  return res;\n};\n\nexport const osmUpdateNode = async (\n  node: OpenStreetMapNode\n): Promise<OpenStreetMapNode> => {\n  await wrapInChangeset(\n    `Update \"${node.tags.amenity}\" amenity`,\n    async changesetId => {\n      const {\n        elements: [fetchedNode]\n      } = await osmGet<{ elements: [OpenStreetMapNode & { version: number }] }>(\n        {\n          path: `/api/0.6/node/${node.id}`\n        }\n      );\n\n      osmPut({\n        path: `/api/0.6/node/${node.id}`,\n\n        content: {\n          osm: {\n            node: {\n              $: {\n                changeset: changesetId,\n                id: node.id,\n                lat: node.lat,\n                lon: node.lon,\n                version: fetchedNode.version\n              },\n              tag: (Object.keys(node.tags) as Array<keyof typeof node.tags>)\n                .filter(t => node.tags[t])\n                .map(k => ({\n                  $: {\n                    k: k,\n                    v: node.tags[k]\n                  }\n                }))\n            }\n          }\n        }\n      });\n    }\n  );\n\n  return node;\n};\n\nexport const osmCreateNode = async (\n  node: Omit<OpenStreetMapNode, \"id\">\n): Promise<OpenStreetMapNode> => {\n  const nodeId = await wrapInChangeset<string>(\n    `Add \"${node.tags.amenity}\" amenity`,\n    changesetId =>\n      osmPut({\n        path: `/api/0.6/node/create`,\n        content: {\n          osm: {\n            node: {\n              $: {\n                changeset: changesetId,\n                lat: node.lat,\n                lon: node.lon\n              },\n              tag: (Object.keys(node.tags) as Array<keyof typeof node.tags>)\n                .filter(t => node.tags[t])\n                .map(k => ({\n                  $: {\n                    k: k,\n                    v: node.tags[k]\n                  }\n                }))\n            }\n          }\n        }\n      })\n  );\n\n  return {\n    ...node,\n    id: parseInt(nodeId)\n  };\n};\n","import * as React from \"react\";\nimport View from \"react-flexview\";\n\ntype Option<V extends string> = {\n  value: V | null;\n  label: string;\n};\n\nexport const Select = <V extends string>(props: {\n  value?: V;\n  label: string;\n  onChange: (value: V) => void;\n  options: Option<V>[];\n}) => {\n  return (\n    <View column className=\"select\" shrink={false}>\n      <span className=\"select-label\">{props.label}</span>\n      <select\n        value={props.value}\n        onChange={e => props.onChange(e.currentTarget.value as V)}\n      >\n        <option value=\"\">Select an option</option>\n        {props.options.map(o => (\n          <option key={o.value} value={o.value || \"\"}>\n            {o.label}\n          </option>\n        ))}\n      </select>\n    </View>\n  );\n};\n\nexport const Input = (props: {\n  value?: string;\n  label: string;\n  onChange: (value: string) => void;\n}) => {\n  return (\n    <View column className=\"input\" shrink={false}>\n      <span className=\"input-label\">{props.label}</span>\n      <input\n        value={props.value || \"\"}\n        onChange={e => props.onChange(e.currentTarget.value)}\n      />\n    </View>\n  );\n};\n\nexport const Checkbox = (props: {\n  label: string;\n  value: boolean;\n  onChange: (value: boolean) => void;\n}) => (\n  <View\n    className=\"checkbox\"\n    vAlignContent=\"center\"\n    onClick={() => props.onChange(!props.value)}\n    shrink={false}\n  >\n    <input\n      checked={props.value}\n      type=\"checkbox\"\n      onChange={e => {\n        props.onChange(e.currentTarget.checked);\n      }}\n    />\n    <span className=\"checkbox-label\">{props.label}</span>\n  </View>\n);\n\nexport const Button = (props: {\n  label: string;\n  onClick: () => void;\n  style?: React.CSSProperties;\n}) => {\n  return (\n    <button className=\"button\" style={props.style} onClick={props.onClick}>\n      {props.label}\n    </button>\n  );\n};\n","import * as React from \"react\";\nimport View from \"react-flexview\";\nimport { Popup } from \"./Popup\";\nimport { OpenStreetMapNode } from \"./getOpenStreetMapAmenities\";\nimport { osmAuth, osmCreateNode, osmUpdateNode } from \"./osm\";\nimport { Select, Input, Button } from \"./form\";\n\nexport type UpsertNode =\n  | {\n      type: \"create_without_coordinates\";\n      node: Omit<OpenStreetMapNode, \"id\" | \"lat\" | \"lon\">;\n    }\n  | {\n      type: \"create\";\n      node: Omit<OpenStreetMapNode, \"id\">;\n    }\n  | {\n      type: \"update\";\n      node: OpenStreetMapNode;\n    }\n  | {\n      type: \"update_without_coordinates\";\n      node: Omit<OpenStreetMapNode, \"lat\" | \"lon\">;\n    };\n\ntype Props = {\n  map: mapboxgl.Map;\n  onClose: () => void;\n  onDone: (node: OpenStreetMapNode) => void;\n} & UpsertNode;\n\nexport const UpsertNodePopup = (props: Props) => {\n  const [state, updateState] = React.useState<UpsertNode>(props);\n\n  const editNodeTag = (tag: string, value: string) => {\n    const tags: OpenStreetMapNode[\"tags\"] = {\n      ...state.node.tags,\n      [tag]: value || null\n    };\n\n    updateState({\n      ...state,\n      node: {\n        ...state.node,\n        tags\n      } as never\n    });\n  };\n\n  const getForm = () => {\n    const node = state.node;\n\n    return (\n      <View column shrink={false}>\n        <Button\n          label=\"Change Position\"\n          onClick={() => {\n            if (state.type === \"create\") {\n              updateState({\n                type: \"create_without_coordinates\",\n                node: {\n                  ...state.node\n                }\n              });\n            } else if (state.type === \"update\") {\n              updateState({\n                type: \"update_without_coordinates\",\n                node: {\n                  ...state.node\n                }\n              });\n            }\n          }}\n        />\n\n        {(node.tags.amenity === \"toilets\" ||\n          node.tags.amenity === \"shower\") && (\n          <Select\n            value={node.tags.access === \"public\" ? \"yes\" : node.tags.access}\n            label=\"Access\"\n            onChange={v => editNodeTag(\"access\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"permissive\", label: \"Permissive\" }\n            ]}\n          />\n        )}\n\n        {(node.tags.amenity === \"toilets\" ||\n          node.tags.amenity === \"shower\") && (\n          <Select\n            value={node.tags.fee}\n            label=\"Fee\"\n            onChange={v => editNodeTag(\"fee\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"no\", label: \"No\" }\n            ]}\n          />\n        )}\n\n        {(node.tags.amenity === \"toilets\" || node.tags.amenity === \"shower\") &&\n        node.tags.fee === \"yes\" ? (\n          <Input\n            value={node.tags.charge}\n            label=\"Fee Amount\"\n            onChange={v => editNodeTag(\"charge\", v)}\n          />\n        ) : (\n          <div />\n        )}\n\n        {node.tags.amenity === \"toilets\" && (\n          <Select\n            value={node.tags.unisex}\n            label=\"Gender\"\n            onChange={v => editNodeTag(\"unisex\", v)}\n            options={[\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"male\", label: \"Male\" },\n              { value: \"female\", label: \"Female\" }\n            ]}\n          />\n        )}\n\n        {node.tags.amenity === \"toilets\" && (\n          <Select\n            value={node.tags.changing_table}\n            label=\"Changing Table\"\n            onChange={v => editNodeTag(\"changing_table\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"no\", label: \"No\" }\n            ]}\n          />\n        )}\n\n        {node.tags.amenity === \"shower\" && (\n          <Select\n            value={node.tags.hot_water}\n            label=\"Hot Water\"\n            onChange={v => editNodeTag(\"hot_water\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"no\", label: \"No\" }\n            ]}\n          />\n        )}\n\n        {(node.tags.amenity === \"toilets\" ||\n          node.tags.amenity === \"shower\") && (\n          <Select\n            value={node.tags.wheelchair}\n            label=\"Wheelchair\"\n            onChange={v => editNodeTag(\"wheelchair\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"no\", label: \"No\" },\n              { value: \"limited\", label: \"Limited\" }\n            ]}\n          />\n        )}\n      </View>\n    );\n  };\n\n  const getTitle = (): string => {\n    switch (props.node.tags.amenity) {\n      case \"drinking_water\":\n        return \"Drinking Water\";\n      case \"toilets\":\n        return \"Toilets\";\n      case \"shower\":\n        return \"Shower\";\n    }\n  };\n\n  if (osmAuth.authenticated()) {\n    switch (state.type) {\n      case \"create_without_coordinates\":\n      case \"update_without_coordinates\": {\n        return (\n          <>\n            <View\n              style={{\n                position: \"fixed\",\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                zIndex: 99999,\n                pointerEvents: \"none\",\n                fontSize: 24\n              }}\n              vAlignContent=\"center\"\n              hAlignContent=\"center\"\n              grow\n            >\n              ✕\n            </View>\n\n            <View\n              style={{\n                position: \"fixed\",\n                left: 0,\n                right: 0,\n                bottom: 66,\n                zIndex: 99999\n              }}\n              vAlignContent=\"center\"\n              hAlignContent=\"center\"\n            >\n              <View\n                style={{\n                  paddingTop: 16,\n                  paddingBottom: 16,\n                  paddingRight: 48,\n                  paddingLeft: 48,\n                  borderRadius: 8,\n                  background: \"rgba(0, 0, 0, 0.1)\"\n                }}\n              >\n                <Button\n                  label=\"Cancel\"\n                  style={{ marginRight: 32 }}\n                  onClick={props.onClose}\n                />\n\n                <Button\n                  label=\"Confirm\"\n                  onClick={() => {\n                    const coordinates = {\n                      lat: props.map.getCenter().lat,\n                      lon: props.map.getCenter().lng\n                    };\n                    if (state.type === \"create_without_coordinates\") {\n                      updateState({\n                        type: \"create\",\n                        node: {\n                          ...state.node,\n                          ...coordinates\n                        }\n                      });\n                    } else {\n                      updateState({\n                        type: \"update\",\n                        node: {\n                          ...state.node,\n                          ...coordinates\n                        }\n                      });\n                    }\n                  }}\n                />\n              </View>\n            </View>\n          </>\n        );\n      }\n\n      case \"create\":\n      case \"update\": {\n        return (\n          <Popup onClose={props.onClose} isOpen={true}>\n            <h2 style={{ margin: 0, textAlign: \"center\" }}>{getTitle()}</h2>\n\n            <View style={{ margin: \"16px 0 24px\" }} className=\"separator\" />\n\n            {getForm()}\n\n            <View style={{ marginTop: 32 }} className=\"separator\" />\n\n            <Button\n              label=\"Save on OSM\"\n              style={{\n                marginTop: 24,\n                background: \"#24A0ED\"\n              }}\n              onClick={() => {\n                if (state.type === \"create\") {\n                  // create\n                  osmCreateNode({ ...state.node }).then(props.onDone);\n                } else {\n                  // update\n                  osmUpdateNode({ ...state.node }).then(props.onDone);\n                }\n              }}\n            />\n          </Popup>\n        );\n      }\n    }\n  } else {\n    // user is not logged in OSM\n    return (\n      <Popup onClose={props.onClose} isOpen={true}>\n        <h2>\n          You need to be logged into Open Street Maps to add and edit nodes\n        </h2>\n\n        <Button\n          label=\"Log in OSM\"\n          style={{\n            marginTop: 48,\n            marginLeft: \"auto\",\n            flexShrink: 0\n          }}\n          onClick={() => {\n            osmAuth.authenticate(() => {\n              updateState({ ...state });\n            });\n          }}\n        />\n      </Popup>\n    );\n  }\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport { BottomSheet, BottomSheetRef } from \"react-spring-bottom-sheet\";\nimport { OpenStreetMapNode } from \"./getOpenStreetMapAmenities\";\nimport View from \"react-flexview\";\nimport DrinkingWaterMarker from \"./DrinkingWaterMarker\";\nimport PublicToiletsMarker from \"./PublicToiletsMarker\";\nimport PublicShowerMarker from \"./PublicShowerMarker\";\nimport { Button } from \"./form\";\nimport capitalize from \"lodash/capitalize\";\n\nimport \"react-spring-bottom-sheet/dist/style.css\";\n\nconst Amenity = (props: { label: string; value: string }): JSX.Element => {\n  return (\n    <View style={{ marginTop: 16 }} column>\n      <span style={{ fontSize: 18, fontWeight: 600, marginBottom: 6 }}>\n        {capitalize(props.label)}\n      </span>\n      <span style={{ fontSize: 18, wordBreak: \"break-all\" }}>\n        {props.value}\n      </span>\n    </View>\n  );\n};\n\ntype Props = {\n  node: OpenStreetMapNode;\n  onDismiss: () => void;\n  onEditNode: (node: OpenStreetMapNode) => void;\n};\n\nexport default (props: Props) => {\n  const sheetRef = useRef<BottomSheetRef>(null);\n\n  const [isOpen, updateOpen] = useState(true);\n\n  useEffect(() => {\n    updateOpen(true);\n  }, [props.node]);\n\n  const color = (tags: OpenStreetMapNode[\"tags\"]): string => {\n    if (\n      \"access\" in tags &&\n      tags.access &&\n      ![\"yes\", \"public\", \"unknown\", \"permissive\"].includes(tags.access)\n    ) {\n      return \"#d0d0d0\";\n    } else if (\n      \"fee\" in tags &&\n      typeof tags.fee === \"string\" &&\n      tags.fee !== \"no\"\n    ) {\n      return \"gold\";\n    }\n\n    return \"white\";\n  };\n\n  const icon = (): JSX.Element => {\n    switch (props.node.tags.amenity) {\n      case \"drinking_water\":\n        return (\n          <View vAlignContent=\"center\">\n            <DrinkingWaterMarker size={48} />\n\n            <span style={{ marginLeft: 16, fontSize: 24 }}>Drinking Water</span>\n          </View>\n        );\n\n      case \"toilets\":\n        return (\n          <View vAlignContent=\"center\">\n            <PublicToiletsMarker color={color(props.node.tags)} size={48} />\n            <span style={{ marginLeft: 16, fontSize: 24 }}>Public Toilets</span>\n          </View>\n        );\n\n      case \"shower\":\n        return (\n          <View vAlignContent=\"center\">\n            <PublicShowerMarker color={color(props.node.tags)} size={48} />\n            <span style={{ marginLeft: 16, fontSize: 24 }}>Public Shower</span>\n          </View>\n        );\n    }\n  };\n\n  const openUrl = (url: string) => window.open(url, \"_blank\");\n\n  return (\n    <BottomSheet\n      style={{ borderRadius: 40 }}\n      open={isOpen}\n      ref={sheetRef}\n      onDismiss={() => updateOpen(false)}\n      onSpringEnd={() => !isOpen && props.onDismiss()}\n      snapPoints={({ maxHeight }) => {\n        return [window.innerHeight * 0.45, maxHeight];\n      }}\n      defaultSnap={({ snapPoints }) => snapPoints[0]}\n      maxHeight={window.innerHeight * 0.85}\n      expandOnContentDrag={true}\n    >\n      <View\n        column\n        shrink={false}\n        style={{ padding: 32, paddingTop: 12, minHeight: \"35vh\" }}\n      >\n        {icon()}\n\n        <View\n          style={{\n            borderTop: \"1px solid #e0e0e0\",\n            borderBottom: \"1px solid #e0e0e0\",\n            margin: \"16px 0\",\n            padding: \"16px 0\"\n          }}\n        >\n          <Button\n            style={{ flexGrow: 1 }}\n            label=\"Directions\"\n            onClick={() =>\n              openUrl(\n                `https://www.google.com/maps/dir//${props.node.lat},${props.node.lon}`\n              )\n            }\n          />\n\n          {props.node.tags.mapillary && (\n            <Button\n              style={{ flexGrow: 1, marginLeft: 16 }}\n              label=\"See street view\"\n              onClick={() => openUrl(props.node.tags.mapillary!)}\n            />\n          )}\n\n          <Button\n            style={{ flexGrow: 1, marginLeft: 16 }}\n            label=\"Edit node\"\n            onClick={() => {\n              props.onEditNode(props.node);\n              props.onDismiss();\n            }}\n          />\n        </View>\n\n        {Object.keys(props.node.tags).map(k => (\n          <Amenity key={k} label={k} value={props.node.tags[k as never]} />\n        ))}\n      </View>\n    </BottomSheet>\n  );\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport debounce from \"lodash/debounce\";\nimport View from \"react-flexview\";\nimport { Option, none, some, map, isSome } from \"fp-ts/lib/Option\";\nimport getOpenStreetMapAmenities, {\n  OpenStreetMapNode,\n  updateCachedItems\n} from \"./getOpenStreetMapAmenities\";\nimport DrinkingWaterMarker from \"./DrinkingWaterMarker\";\nimport PublicToiletsMarker from \"./PublicToiletsMarker\";\nimport PublicShowerMarker from \"./PublicShowerMarker\";\nimport distance from \"@turf/distance\";\nimport localforage from \"localforage\";\nimport MenuIcon from \"./MenuIcon\";\nimport * as MapboxCircle from \"mapbox-gl-circle\";\nimport LoadingBar, { LoadingBarRef } from \"react-top-loading-bar\";\nimport { Popup } from \"./Popup\";\nimport { UpsertNode, UpsertNodePopup } from \"./UpsertNode\";\nimport { Button, Checkbox } from \"./form\";\nimport BottomSheet from \"./BottomSheet\";\n\nimport \"./map.scss\";\n\nconst mapboxgl = window.mapboxgl;\n\ntype State = {\n  openedNode: null | OpenStreetMapNode;\n  upsertNode: null | UpsertNode;\n  isMenuOpen: boolean;\n  around: number;\n  showRadius: boolean;\n  showDrinkingWater: boolean;\n  showToilets: boolean;\n  showShowers: boolean;\n  continousSearch: boolean;\n  showSearchThisAreaButton: boolean;\n};\n\nclass MapFountains extends React.PureComponent<{}, State> {\n  state: State = {\n    openedNode: null,\n    upsertNode: null,\n    isMenuOpen: false,\n    around: 0,\n    showRadius: false,\n    showDrinkingWater: true,\n    showShowers: true,\n    showToilets: true,\n    continousSearch: false,\n    showSearchThisAreaButton: false\n  };\n\n  map: Option<mapboxgl.Map> = none;\n\n  circleRadius: any | null = null;\n\n  nodes: {\n    [id: string]: {\n      node: OpenStreetMapNode;\n      marker: mapboxgl.Marker;\n    };\n  } = {};\n\n  loadingBarRef = React.createRef<LoadingBarRef>();\n\n  previousCenter: { lng: number; lat: number } = { lng: 0, lat: 0 };\n\n  updateCachedAmenities = () => {\n    map<mapboxgl.Map, void>(map => {\n      localforage.getItem<OpenStreetMapNode[]>(\"amenities\").then(items => {\n        if (items) {\n          this.addAmenitiesMarkers(\n            // add cached nodes contained in the circle radius\n            items.filter(node => {\n              const distanceInMeters = distance(\n                [map.getCenter().lat, map.getCenter().lng],\n                [node.lat, node.lon],\n                {\n                  units: \"meters\"\n                }\n              );\n\n              return distanceInMeters < this.state.around;\n            })\n          );\n        }\n      });\n    });\n  };\n\n  updateAmenities = () => {\n    map<mapboxgl.Map, void>(map => {\n      this.updateCachedAmenities();\n\n      if (this.loadingBarRef.current) {\n        // @ts-ignore (continuousStart args are optional)\n        this.loadingBarRef.current.continuousStart();\n      }\n\n      getOpenStreetMapAmenities({\n        around: this.state.around,\n        lat: map.getCenter().lat,\n        lng: map.getCenter().lng\n      })\n        .then(this.addAmenitiesMarkers)\n        .then(() => {\n          if (this.loadingBarRef.current) {\n            this.loadingBarRef.current.complete();\n          }\n        });\n    })(this.map);\n  };\n\n  updateAmenitiesDebounce = debounce(() => {\n    map<mapboxgl.Map, void>(map => {\n      if (this.previousCenter.lat === 0 && this.previousCenter.lng === 0) {\n        this.previousCenter = map.getCenter();\n        return;\n      }\n\n      const distanceInMeters = distance(\n        [map.getCenter().lat, map.getCenter().lng],\n        [this.previousCenter.lat, this.previousCenter.lng],\n        {\n          units: \"meters\"\n        }\n      );\n\n      if (distanceInMeters > this.state.around / 2) {\n        if (this.state.continousSearch) {\n          this.previousCenter = map.getCenter();\n          this.updateAmenities();\n        } else {\n          this.setState({ showSearchThisAreaButton: true });\n        }\n      } else {\n        this.setState({ showSearchThisAreaButton: false });\n      }\n    })(this.map);\n  }, 1000);\n\n  initializeMap() {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoiZnJhbmNlc2NvY2lvcmlhIiwiYSI6ImNqcThyejR6ODA2ZDk0M25rZzZjcGo4ZmcifQ.yRWHQbG1dJjDp43d01bBOw\";\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(e => {\n        const map = new mapboxgl.Map({\n          container: \"map\",\n          style:\n            \"mapbox://styles/francescocioria/cjqi3u6lmame92rmw6aw3uyhm?optimize=true\",\n          center: {\n            lat: e.coords.latitude,\n            lng: e.coords.longitude\n          },\n          zoom: 15.0,\n          scrollZoom:\n            /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n              navigator.userAgent\n            )\n              ? false\n              : true\n        });\n\n        map.addControl(\n          new mapboxgl.GeolocateControl({\n            positionOptions: {\n              enableHighAccuracy: true\n            },\n            trackUserLocation: true\n          }),\n          \"bottom-right\"\n        );\n\n        map.addControl(\n          new mapboxgl.NavigationControl({\n            showZoom: false,\n            showCompass: true\n          }),\n          \"bottom-right\"\n        );\n\n        map.addControl(new mapboxgl.ScaleControl());\n\n        map.on(\"load\", () => {\n          this.map = some(map);\n\n          this.updateAmenities();\n\n          (\n            document.querySelector(\".mapboxgl-ctrl-geolocate\") as HTMLElement\n          )?.click();\n        });\n\n        map.on(\"move\", () => {\n          this.updateAmenitiesDebounce();\n\n          requestAnimationFrame(() => {\n            if (this.state.showRadius) {\n              this.showRadius();\n            }\n          });\n        });\n      });\n    }\n  }\n\n  addMarkers = (\n    nodes: OpenStreetMapNode[],\n    markerElement: (node: OpenStreetMapNode) => JSX.Element,\n    show: boolean\n  ) => {\n    map<mapboxgl.Map, void>(map => {\n      nodes.forEach(node => {\n        if (!this.nodes[node.id]) {\n          const element = document.createElement(\"div\");\n\n          ReactDOM.render(\n            <div\n              onClick={() => {\n                this.setState({ openedNode: node });\n              }}\n            >\n              {markerElement(node)}\n            </div>,\n            element\n          );\n\n          const marker: mapboxgl.Marker = new mapboxgl.Marker({\n            element\n          }).setLngLat([node.lon, node.lat]);\n\n          if (show) {\n            marker.addTo(map);\n          }\n\n          this.nodes[node.id] = {\n            node,\n            marker\n          };\n        }\n      });\n    })(this.map);\n  };\n\n  color(tags: OpenStreetMapNode[\"tags\"]): string {\n    if (\n      \"access\" in tags &&\n      tags.access &&\n      ![\"yes\", \"public\", \"unknown\", \"permissive\"].includes(tags.access)\n    ) {\n      return \"#d0d0d0\";\n    } else if (\n      \"fee\" in tags &&\n      typeof tags.fee === \"string\" &&\n      tags.fee !== \"no\"\n    ) {\n      return \"gold\";\n    }\n\n    return \"white\";\n  }\n\n  addAmenitiesMarkers = (nodes: OpenStreetMapNode[]) => {\n    // public showers\n    this.addMarkers(\n      nodes.filter(node => node.tags.amenity === \"shower\"),\n      (node: OpenStreetMapNode) => (\n        <PublicShowerMarker color={this.color(node.tags)} size={20} />\n      ),\n      this.state.showShowers\n    );\n\n    // drinking_water\n    this.addMarkers(\n      nodes.filter(node => node.tags.amenity === \"drinking_water\"),\n      () => <DrinkingWaterMarker size={20} />,\n      this.state.showDrinkingWater\n    );\n\n    // toilets\n    this.addMarkers(\n      nodes.filter(node => node.tags.amenity === \"toilets\"),\n      (node: OpenStreetMapNode) => (\n        <PublicToiletsMarker color={this.color(node.tags)} size={20} />\n      ),\n      this.state.showToilets\n    );\n  };\n\n  showRadius() {\n    map<mapboxgl.Map, void>(map => {\n      const center = {\n        lat: map.getCenter().lat,\n        lng: map.getCenter().lng\n      };\n\n      if (this.circleRadius) {\n        this.circleRadius.setCenter(center);\n\n        this.circleRadius.setRadius(this.state.around);\n      } else {\n        this.circleRadius = new MapboxCircle(center, this.state.around, {\n          editable: false,\n          minRadius: 0,\n          fillColor: \"transparent\"\n        }).addTo(map);\n      }\n    })(this.map);\n  }\n\n  hideRadius() {\n    this.circleRadius.remove();\n    this.circleRadius = null;\n  }\n\n  componentDidMount() {\n    // initialize \"around\" radius\n    localforage\n      .getItem<number>(\"around\")\n      .then(around => this.setState({ around: around || 1000 }));\n\n    // initialize \"showRadius\" option\n    localforage.getItem<boolean>(\"showRadius\").then(showRadius => {\n      this.setState({ showRadius: showRadius === null ? true : showRadius });\n\n      if (showRadius) {\n        this.showRadius();\n      }\n    });\n\n    // initialize \"continousSearch\" option\n    localforage\n      .getItem<boolean>(\"continousSearch\")\n      .then(continousSearch =>\n        this.setState({ continousSearch: continousSearch || false })\n      );\n\n    // initialize map\n    this.initializeMap();\n  }\n\n  componentDidUpdate() {\n    requestAnimationFrame(() => {\n      map<mapboxgl.Map, void>(map => map.resize())(this.map);\n    });\n  }\n\n  drinkingWaterNodes() {\n    return Object.values(this.nodes).filter(\n      v => v.node.tags.amenity === \"drinking_water\"\n    );\n  }\n\n  toiletsNodes() {\n    return Object.values(this.nodes).filter(\n      v => v.node.tags.amenity === \"toilets\"\n    );\n  }\n\n  showerNodes() {\n    return Object.values(this.nodes).filter(\n      v => v.node.tags.amenity === \"shower\"\n    );\n  }\n\n  render() {\n    return (\n      <View style={{ height: \"100%\", width: \"100%\" }} column>\n        <View>\n          <LoadingBar ref={this.loadingBarRef} color=\"lightgreen\" height={8} />\n        </View>\n\n        <View grow id=\"map\" />\n\n        {this.state.openedNode && (\n          <BottomSheet\n            node={this.state.openedNode}\n            onDismiss={() => this.setState({ openedNode: null })}\n            onEditNode={node =>\n              this.setState({\n                upsertNode: { type: \"update\", node }\n              })\n            }\n          />\n        )}\n\n        {this.state.showSearchThisAreaButton && this.state.openedNode === null && (\n          <View\n            className=\"search-this-area-button\"\n            vAlignContent=\"center\"\n            hAlignContent=\"center\"\n            onClick={() => {\n              map<mapboxgl.Map, void>(map => {\n                this.previousCenter = map.getCenter();\n                this.updateAmenities();\n\n                this.setState({ showSearchThisAreaButton: false });\n              })(this.map);\n            }}\n          >\n            Search this area\n          </View>\n        )}\n\n        {this.state.upsertNode && isSome(this.map) && (\n          <UpsertNodePopup\n            map={this.map.value}\n            onClose={() => {\n              this.setState({ upsertNode: null });\n            }}\n            onDone={(node: OpenStreetMapNode) => {\n              if (this.nodes[node.id]) {\n                // remove marker\n                this.nodes[node.id].marker.remove();\n\n                // delete node from cache\n                delete this.nodes[node.id];\n              }\n\n              // show updated/created node\n              this.addAmenitiesMarkers([node]);\n\n              // fire&forget\n              updateCachedItems([node]);\n\n              this.setState({ upsertNode: null });\n            }}\n            {...this.state.upsertNode}\n          />\n        )}\n\n        <View\n          className=\"menu-button\"\n          hAlignContent=\"center\"\n          vAlignContent=\"center\"\n          onClick={() => this.setState({ isMenuOpen: true })}\n        >\n          <MenuIcon />\n\n          {/* popup */}\n          <Popup\n            onClose={() => {\n              this.setState({ isMenuOpen: false });\n            }}\n            isOpen={this.state.isMenuOpen}\n          >\n            <span className=\"menu-item-label\">\n              Around radius: <b>{this.state.around} meters</b>\n            </span>\n            <input\n              value={this.state.around}\n              type=\"range\"\n              min=\"500\"\n              max=\"15000\"\n              step=\"500\"\n              onChange={e => {\n                const around = parseInt(e.currentTarget.value) || 1000;\n\n                this.setState({ around });\n                localforage.setItem(\"around\", around);\n              }}\n            />\n\n            <View height={24} />\n\n            <View className=\"separator\" />\n\n            <Checkbox\n              value={this.state.showRadius}\n              label=\"Show radius in map\"\n              onChange={showRadius => {\n                this.setState({ showRadius });\n                localforage.setItem(\"showRadius\", showRadius);\n\n                if (showRadius) {\n                  this.showRadius();\n                } else {\n                  this.hideRadius();\n                }\n              }}\n            />\n\n            <View className=\"separator\" />\n\n            <Checkbox\n              value={this.state.continousSearch}\n              label=\"Enable continous search\"\n              onChange={continousSearch => {\n                this.setState({\n                  continousSearch,\n                  showSearchThisAreaButton: false\n                });\n                localforage.setItem(\"continousSearch\", continousSearch);\n              }}\n            />\n\n            <View className=\"separator\" />\n\n            <Checkbox\n              value={this.state.showDrinkingWater}\n              label='Show \"drinking water\"'\n              onChange={showDrinkingWater => {\n                this.setState({ showDrinkingWater });\n\n                map<mapboxgl.Map, void>(map => {\n                  if (showDrinkingWater) {\n                    this.drinkingWaterNodes().forEach(v => v.marker.addTo(map));\n                  } else {\n                    this.drinkingWaterNodes().forEach(v => v.marker.remove());\n                  }\n                })(this.map);\n              }}\n            />\n\n            <Checkbox\n              value={this.state.showToilets}\n              label='Show \"toilets\"'\n              onChange={showToilets => {\n                this.setState({ showToilets });\n\n                map<mapboxgl.Map, void>(map => {\n                  if (showToilets) {\n                    this.toiletsNodes().forEach(v => v.marker.addTo(map));\n                  } else {\n                    this.toiletsNodes().forEach(v => v.marker.remove());\n                  }\n                })(this.map);\n              }}\n            />\n\n            <Checkbox\n              value={this.state.showShowers}\n              label='Show \"showers\"'\n              onChange={showShowers => {\n                this.setState({ showShowers });\n\n                map<mapboxgl.Map, void>(map => {\n                  if (showShowers) {\n                    this.showerNodes().forEach(v => v.marker.addTo(map));\n                  } else {\n                    this.showerNodes().forEach(v => v.marker.remove());\n                  }\n                })(this.map);\n              }}\n            />\n\n            <View className=\"separator\" />\n\n            <Button\n              label=\"Add drinking fountain\"\n              style={{ marginTop: 16 }}\n              onClick={() => {\n                this.setState({\n                  isMenuOpen: false,\n                  upsertNode: {\n                    type: \"create_without_coordinates\",\n                    node: {\n                      tags: { amenity: \"drinking_water\" }\n                    }\n                  }\n                });\n              }}\n            />\n\n            <Button\n              label=\"Add toilets\"\n              style={{ marginTop: 24 }}\n              onClick={() => {\n                this.setState({\n                  isMenuOpen: false,\n                  upsertNode: {\n                    type: \"create_without_coordinates\",\n                    node: {\n                      tags: { amenity: \"toilets\" }\n                    }\n                  }\n                });\n              }}\n            />\n\n            <Button\n              label=\"Add shower\"\n              style={{ marginTop: 24 }}\n              onClick={() => {\n                this.setState({\n                  isMenuOpen: false,\n                  upsertNode: {\n                    type: \"create_without_coordinates\",\n                    node: {\n                      tags: { amenity: \"shower\" }\n                    }\n                  }\n                });\n              }}\n            />\n          </Popup>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default MapFountains;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (\"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl, { scope: \"/fontanelle/\" })\n    .then(registration => {\n      console.log(registration.scope);\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { FC, useEffect } from \"react\";\nimport * as serviceWorker from \"./serviceWorkerRegistration\";\nimport View from \"react-flexview\";\nimport { none, Option, fromNullable, map } from \"fp-ts/lib/Option\";\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nconst ServiceWorkerWrapper: FC = () => {\n  const [showReload, setShowReload] = React.useState(false);\n  const [waitingWorker, setWaitingWorker] =\n    React.useState<Option<ServiceWorker>>(none);\n\n  const onSWUpdate = (registration: ServiceWorkerRegistration) => {\n    setShowReload(true);\n    setWaitingWorker(fromNullable(registration.waiting));\n  };\n\n  useEffect(() => {\n    serviceWorker.register({ onUpdate: onSWUpdate });\n  }, []);\n\n  const reloadPage = () => {\n    console.log(\"reload page\");\n    map<ServiceWorker, void>(ww => ww.postMessage({ type: \"SKIP_WAITING\" }))(\n      waitingWorker\n    );\n    setShowReload(false);\n    window.location.reload();\n  };\n\n  return showReload ? (\n    <View\n      className=\"updateAvailable\"\n      vAlignContent=\"center\"\n      hAlignContent=\"center\"\n      style={{\n        background: \"lightgreen\",\n        height: 40,\n        color: \"black\",\n        position: \"fixed\",\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 9999999999999\n      }}\n    >\n      Update Available:\n      <span\n        style={{\n          marginLeft: 32,\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        }}\n        onClick={() => reloadPage()}\n      >\n        Install\n      </span>\n      <span\n        style={{\n          marginLeft: 32,\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        }}\n        onClick={() => {\n          console.log(\"ignore\");\n          setShowReload(false);\n        }}\n      >\n        Ignore\n      </span>\n    </View>\n  ) : null;\n};\n\nexport default ServiceWorkerWrapper;\n","import React from \"react\";\nimport Map from \"./Map\";\nimport View from \"react-flexview\";\nimport ServiceWorkerWrapper from \"./ServiceWorkerWrapper\";\n\nfunction App() {\n  return (\n    <View className=\"App\" style={{ height: \"100vh\", width: \"100vw\" }} column>\n      <ServiceWorkerWrapper />\n      <Map />\n    </View>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}