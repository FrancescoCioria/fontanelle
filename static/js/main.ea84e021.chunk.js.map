{"version":3,"sources":["DrinkingWaterMarker.tsx","PublicToiletsMarker.tsx","PublicShowerMarker.tsx","BicycleRepairStationMarker.tsx","PublicBathMarker.tsx","getOpenStreetMapAmenities.tsx","MenuIcon.tsx","Popup.tsx","osm.ts","form.tsx","UpsertNode.tsx","BottomSheet.tsx","Map.tsx","serviceWorkerRegistration.ts","ServiceWorkerWrapper.tsx","App.tsx","index.tsx"],"names":["props","width","size","height","viewBox","enableBackground","xmlSpace","fill","cx","cy","r","d","transform","rx","ry","style","background","color","borderRadius","points","version","border","id","clipPath","overflow","transformOrigin","stroke","strokeWidth","amenities","Object","values","drinking_water","shower","toilets","public_bath","bicycle_repair_station","updateCachedItems","newNodes","a","localforage","cachedItems","nodes","uniqBy","concat","i","options","formData","join","around","lat","lng","fetch","res","json","elements","getAmenityMarker","amenityTags","disabledColor","opening_hours","oh","OpeningHours","getUnknown","getState","e","closed","access","includes","fee","amenity","DrinkingWaterMarker","PublicToiletsMarker","PublicShowerMarker","BicycleRepairStationMarker","PublicBathMarker","getAmenityTitle","Popup","className","display","isOpen","hAlignContent","vAlignContent","onClick","stopPropagation","onClose","shrink","column","children","_osmAuth","require","osmAuth","xmlBuilder","Builder","client_id","client_secret","redirect_uri","scope","osmApi","Promise","resolve","reject","xhr","err","result","osmPut","method","path","headers","content","buildObject","wrapInChangeset","changesetComment","mutation","osm","changeset","tag","$","k","v","changesetId","osmUpdateNode","node","tags","Accept","then","JSON","parse","fetchedNode","lon","keys","filter","t","map","osmCreateNode","nodeId","parseInt","Select","label","value","onChange","currentTarget","o","Input","Checkbox","checked","type","Button","UpsertNodePopup","React","state","updateState","editNodeTag","authenticated","marginTop","marginLeft","flexShrink","authenticate","position","top","left","right","bottom","zIndex","pointerEvents","fontSize","grow","paddingTop","paddingBottom","paddingRight","paddingLeft","marginRight","coordinates","getCenter","margin","textAlign","charge","unisex","changing_table","hot_water","wheelchair","getForm","onDone","Amenity","fontWeight","marginBottom","capitalize","wordBreak","useState","updateOpen","useEffect","openUrl","url","window","open","onDismiss","onSpringEnd","snapPoints","maxHeight","innerHeight","defaultSnap","expandOnContentDrag","padding","minHeight","borderTop","borderBottom","flexGrow","mapillary","onEditNode","mapboxgl","MapFountains","openedNode","upsertNode","isMenuOpen","showRadius","filters","continousSearch","showSearchThisAreaButton","none","circleRadius","loadingBarRef","previousCenter","updateCachedAmenities","getMap","center","getItem","items","nodesInRadius","distance","units","addAmenitiesMarkers","updateAmenities","current","continuousStart","getOpenStreetMapAmenities","finally","complete","updateAmenitiesDebounce","debounce","setState","amenitiesMapOrder","sortBy","forEach","element","document","createElement","ReactDOM","marker","Marker","setLngLat","addTo","cb","this","accessToken","navigator","geolocation","getCurrentPosition","Map","container","coords","latitude","longitude","zoom","scrollZoom","test","userAgent","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","NavigationControl","showZoom","showCompass","ScaleControl","on","some","querySelector","click","requestAnimationFrame","setCenter","setRadius","MapboxCircle","editable","minRadius","fillColor","remove","initializeMap","resize","show","updateFilter","amenityNodes","ref","BottomSheet","isSome","MenuIcon","min","max","step","setItem","hideRadius","isLocalhost","Boolean","location","hostname","match","register","config","URL","process","href","origin","addEventListener","swUrl","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ServiceWorkerWrapper","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","fromNullable","waiting","textDecoration","cursor","ww","postMessage","App","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ea84e021.chunk.js","sourcesContent":["export default (props: { size: number }) => (\n  <svg\n    width={props.size}\n    height={props.size}\n    viewBox=\"0 0 508 508\"\n    enableBackground=\"new 0 0 508 508\"\n    xmlSpace=\"preserve\"\n  >\n    <circle fill=\"#324A5E\" cx=\"254\" cy=\"254\" r=\"254\" />\n    <path\n      fill=\"#54C0EB\"\n      d=\"M252,414h4c62.8,0,115.2-50.4,114-113.2c0-8-1.2-15.6-2.8-22.8C360,246.4,324,210,298,170.8  c-27.2-37.6-44-77.6-44-76.4c-0.4-0.8-17.2,39.2-44,76.4c-25.6,39.2-62,76-69.2,106.8c-2,7.2-2.8,14.8-2.8,22.8  C136.8,363.2,189.2,414,252,414z\"\n    />\n    <g>\n      <path\n        fill=\"#84DBFF\"\n        d=\"M177.2,353.6c6-0.4,9.6-6,7.2-10.8c-3.2-7.2-6-14.8-7.2-22.8c-1.6-8-2-15.6-1.6-23.2   c1.2-32,32-75.2,51.6-118.4c2-3.6,3.6-7.6,5.2-11.2c-0.8,1.2-1.6,2.4-2.4,3.2c-26.4,40.4-64,78.8-70.8,110   c-1.6,7.2-2.4,15.2-2.4,23.2c0.4,16.8,4.8,32,12.4,46C171.2,352.4,174,354,177.2,353.6L177.2,353.6z\"\n      />\n\n      <ellipse\n        transform=\"matrix(-0.042 -0.9991 0.9991 -0.042 -169.3631 569.6013)\"\n        fill=\"#84DBFF\"\n        cx=\"188.401\"\n        cy=\"365.998\"\n        rx=\"8.4\"\n        ry=\"9.2\"\n      />\n    </g>\n  </svg>\n);\n","export default (props: { color: string; size: number }) => (\n  <svg\n    width={props.size}\n    height={props.size}\n    viewBox=\"0 0 395 395\"\n    xmlSpace=\"preserve\"\n    fill=\"black\"\n    style={{ background: props.color, borderRadius: props.size / 6 }}\n  >\n    <g>\n      <path d=\"M229.412,130.862c-2.405-3.355-6.284-5.346-10.412-5.346h-1.266c-5.524,0-10.424,3.539-12.161,8.782l-27.534,83.09   l-27.662-83.107c-1.743-5.233-6.639-8.765-12.156-8.765h-0.822c-0.051,0-0.104,0.003-0.153,0.003c-0.053,0-0.105-0.003-0.155-0.003   h-0.998c-5.524,0-10.425,3.539-12.163,8.782l-27.533,83.09l-27.661-83.107c-1.742-5.233-6.64-8.765-12.156-8.765h-1.268   c-4.13,0-8.007,1.991-10.414,5.346c-2.407,3.357-3.045,7.669-1.72,11.579l40.125,118.344c1.763,5.201,6.643,8.698,12.135,8.698   h0.53c0.153,0,0.303-0.008,0.455-0.014c0.151,0.006,0.302,0.014,0.454,0.014h0.354c5.5,0,10.386-3.511,12.142-8.721l27.845-82.675   l27.718,82.657c1.751,5.221,6.642,8.739,12.148,8.739h0.527c0.153,0,0.303-0.008,0.456-0.014c0.15,0.006,0.302,0.014,0.454,0.014   h0.355c5.491,0,10.37-3.497,12.134-8.698l40.125-118.344C232.459,138.531,231.818,134.22,229.412,130.862z\" />\n      <path d=\"M347.88,232.295c-4.756-4.416-12.063-4.578-17.01-0.378c-8.521,7.234-19.511,11.218-30.943,11.218   c-26.069,0-47.277-20.51-47.277-45.721c0-25.116,21.208-45.548,47.277-45.548c11.542,0,22.522,3.916,30.921,11.027   c5.087,4.306,12.625,3.995,17.339-0.719l0.427-0.427c2.544-2.542,3.899-6.036,3.74-9.628c-0.161-3.592-1.822-6.952-4.58-9.258   c-13.371-11.184-30.366-17.344-47.848-17.344c-40.598,0-73.628,32.253-73.628,71.898c0,39.739,33.03,72.07,73.628,72.07   c17.454,0,34.493-6.207,47.979-17.48c2.822-2.36,4.495-5.817,4.589-9.494c0.098-3.678-1.393-7.22-4.087-9.723L347.88,232.295z\" />\n      <path d=\"M313.001,0H81.999C36.785,0,0,36.784,0,81.998v230.993C0,358.211,36.785,395,81.999,395h231.002   C358.216,395,395,358.211,395,312.991V81.998C395,36.784,358.216,0,313.001,0z M380,312.991C380,349.94,349.945,380,313.001,380   H81.999C45.056,380,15,349.94,15,312.991V81.998C15,45.055,45.056,15,81.999,15h231.002C349.945,15,380,45.055,380,81.998V312.991z   \" />\n    </g>\n  </svg>\n);\n","export default (props: { color: string; size: number }) => (\n  <svg\n    enableBackground=\"new -0.258 -0.548 123.547 123.539\"\n    xmlSpace=\"preserve\"\n    viewBox=\"-0.258 -0.548 123.547 123.539\"\n    width={props.size}\n    height={props.size}\n  >\n    <g>\n      <path\n        fill=\"#231F20\"\n        d=\"m109.63 123.6c8.148 0 14.766-6.586 14.766-14.742v-94.02c0-8.156-6.617-14.773-14.766-14.773h-94.013c-8.156 0-14.758 6.617-14.758 14.773v94.016c0 8.156 6.602 14.742 14.758 14.742h94.013z\"\n      />\n      <path\n        fill={props.color}\n        d=\"m15.617 2.559c-6.758 0-12.258 5.516-12.258 12.281v94.016c0 6.734 5.5 12.234 12.258 12.234h94.016c6.758 0 12.25-5.5 12.25-12.234v-94.02c0-6.766-5.492-12.281-12.25-12.281h-94.013z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m68.344 66.402c6.789 0 12.281-5.5 12.281-12.281 0-6.789-5.492-12.281-12.281-12.281s-12.297 5.492-12.297 12.281c0 6.781 5.508 12.281 12.297 12.281z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m56.766 96.254c0 1.32 1.062 3.055 2.398 3.055v-0.023h5.664v0.023c1.344 0 3.055-1.711 3.055-3.031v-10.446c0-1.32-1.711-3-3.055-3h-5.664c-1.25 0-2.266 1.586-2.398 2.781 8.164 0 8.109 10.641 0 10.641zm-5.149-25.922c1.312-1.273 3.102-2.031 5.055-2.031h24.219l24.367-24.438c5.227-5.25 12.062 1.562 6.836 6.812l-26.741 26.805 0.023 36.602h-32.062v-17.771h-14.484c-3.016 0-5.469-2.445-5.469-5.469 0-1.297 0.438-2.469 1.18-3.422l17.07-17.086z\"\n      />\n      <polygon\n        fill=\"#231F20\"\n        points=\"12.883 22.621 15.859 25.605 30.242 10.902 27.266 7.926 20.742 10.395 17.75 7.418 11.75 13.395 14.727 16.402\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m35.023 69.324c-0.281 1.812 0.969 3.445 2.734 3.688 1.781 0.297 3.469-1 3.688-2.734 0.273-1.805-0.953-3.438-2.742-3.688-1.773-0.266-3.445 0.953-3.68 2.734z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m37.844 61.902c0.242-1.703-0.914-3.266-2.609-3.516-1.695-0.242-3.258 0.93-3.508 2.617-0.242 1.734 0.93 3.242 2.617 3.492 1.679 0.267 3.273-0.929 3.5-2.593z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m34.242 53.535c0.219-1.617-0.867-3.102-2.477-3.352-1.609-0.219-3.086 0.883-3.32 2.492-0.234 1.641 0.867 3.078 2.469 3.32 1.609 0.275 3.109-0.897 3.328-2.46z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m30.641 45.16c0.219-1.516-0.812-2.93-2.344-3.148-1.539-0.219-2.93 0.828-3.148 2.344-0.219 1.531 0.828 2.906 2.344 3.148s2.945-0.859 3.148-2.344z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m27.039 36.785c0.211-1.445-0.781-2.781-2.203-2.977-1.453-0.195-2.766 0.781-2.969 2.219-0.211 1.469 0.766 2.734 2.195 2.977 1.446 0.219 2.782-0.805 2.977-2.219z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m18.57 27.699c-0.211 1.367 0.734 2.562 2.078 2.789 1.344 0.219 2.594-0.758 2.789-2.078 0.195-1.344-0.727-2.609-2.07-2.781-1.383-0.195-2.617 0.726-2.797 2.07z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m47.148 57.512c0.086-1.758 1.602-3.148 3.367-3.055 1.781 0.102 3.141 1.586 3.055 3.398-0.062 1.781-1.586 3.125-3.375 3.023-1.765-0.046-3.148-1.562-3.047-3.366z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m45.117 54.02c-1.68-0.07-3-1.492-2.898-3.219 0.086-1.688 1.523-2.984 3.211-2.906 1.695 0.094 2.977 1.508 2.898 3.219-0.07 1.71-1.508 2.976-3.211 2.906z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m40.055 47.137c-1.602-0.078-2.844-1.414-2.758-3.031 0.086-1.609 1.438-2.852 3.055-2.758 1.594 0.078 2.828 1.445 2.758 3.055-0.063 1.585-1.446 2.827-3.055 2.734z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m34.977 40.277c-1.516-0.078-2.695-1.344-2.609-2.883 0.086-1.516 1.367-2.688 2.891-2.609 1.516 0.07 2.688 1.367 2.609 2.875-0.056 1.516-1.368 2.711-2.891 2.617z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m29.914 33.418c-1.43-0.078-2.555-1.297-2.469-2.734 0.07-1.422 1.281-2.516 2.719-2.469 1.43 0.07 2.539 1.297 2.469 2.734-0.063 1.414-1.297 2.539-2.719 2.469z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m22.516 23.988c0.07-1.336 1.203-2.391 2.562-2.32 1.344 0.055 2.391 1.203 2.32 2.547-0.062 1.336-1.227 2.414-2.562 2.312-1.344-0.07-2.398-1.195-2.32-2.539z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m55.945 43.691c-1.781 0.102-3.328-1.266-3.391-3.047-0.094-1.812 1.305-3.32 3.086-3.398 1.75-0.07 3.281 1.273 3.352 3.102 0.102 1.734-1.258 3.273-3.047 3.343z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m52.078 35.27c0.086 1.633-1.18 3.055-2.859 3.125-1.672 0.07-3.109-1.195-3.18-2.852-0.078-1.688 1.219-3.078 2.891-3.18 1.648-0.07 3.062 1.196 3.148 2.907z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m45.172 30.191c0.07 1.539-1.125 2.859-2.688 2.93-1.562 0.078-2.914-1.125-2.977-2.656-0.078-1.594 1.148-2.906 2.711-2.984 1.532-0.071 2.868 1.124 2.954 2.71z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m38.258 25.113c0.062 1.445-1.047 2.688-2.5 2.734-1.453 0.07-2.711-1.047-2.773-2.492-0.055-1.461 1.078-2.68 2.531-2.758 1.429-0.07 2.672 1.055 2.742 2.516z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m26.469 20.277c-0.07-1.367 0.992-2.516 2.328-2.562 1.336-0.07 2.492 0.977 2.555 2.32s-0.977 2.492-2.32 2.539c-1.344 0.078-2.516-0.976-2.563-2.297z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m32.508 13.762c1.336-0.195 2.602 0.734 2.797 2.078s-0.734 2.609-2.086 2.781c-1.344 0.219-2.602-0.734-2.797-2.078-0.18-1.344 0.758-2.586 2.086-2.781z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m44.117 19.426c0.211 1.414-0.781 2.734-2.195 2.93-1.414 0.219-2.742-0.781-2.938-2.172-0.195-1.414 0.789-2.758 2.195-2.953 1.399-0.196 2.735 0.781 2.938 2.195z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m52.93 22.988c0.227 1.516-0.812 2.883-2.305 3.102-1.484 0.219-2.891-0.828-3.102-2.297-0.203-1.484 0.836-2.875 2.312-3.094 1.477-0.226 2.876 0.805 3.095 2.289z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m61.727 26.582c0.25 1.562-0.852 3-2.414 3.242-1.547 0.219-3.023-0.852-3.227-2.414-0.227-1.562 0.852-3.031 2.398-3.25 1.563-0.242 3.024 0.86 3.243 2.422z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m70.539 30.168c0.25 1.633-0.898 3.148-2.516 3.391-1.633 0.25-3.172-0.898-3.391-2.516-0.219-1.633 0.906-3.172 2.516-3.414 1.633-0.219 3.149 0.906 3.391 2.539z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m79.352 33.754c0.273 1.711-0.922 3.297-2.633 3.539-1.688 0.25-3.297-0.945-3.539-2.633-0.242-1.711 0.93-3.32 2.633-3.562 1.71-0.243 3.296 0.953 3.539 2.656z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m84.484 34.559c1.781-0.242 3.438 1.008 3.688 2.789 0.266 1.758-0.977 3.414-2.734 3.688-1.789 0.266-3.469-0.977-3.688-2.758-0.273-1.79 0.953-3.446 2.734-3.719z\"\n      />\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\n\nexport default (props: { size: number }) => (\n  <svg\n    width={props.size}\n    height={props.size}\n    version=\"1.1\"\n    viewBox=\"0 0 752 752\"\n    style={{ border: \"1px solid black\", borderRadius: props.size / 3.3 }}\n  >\n    <defs>\n      <clipPath id=\"a\">\n        <path d=\"m139.21 140h473.58v287h-473.58z\" />\n      </clipPath>\n    </defs>\n    <path\n      d=\"m37.602 0h676.8c20.766 0 37.602 20.766 37.602 37.602v676.8c0 20.766-16.836 37.602-37.602 37.602h-676.8c-20.766 0-37.602-20.766-37.602-37.602v-676.8c0-20.766 16.836-37.602 37.602-37.602z\"\n      fill=\"#fff\"\n    />\n    <g clipPath=\"url(#a)\">\n      <path d=\"m520.71 242.8c-10.102 0-19.801 1.6797-28.887 4.6875l-26.539-58.383 4.2891-11.934c12.391 0.066407 24.27 0.12891 24.27 0.12891l0.003906-16.711h-81.457c-10.074 9.8594 22.961 16.711 29.531 16.434 0 0 2.6797 0.007812 6.7266 0.042968l-4.7188 13.117h-155.76c3.2617-10.148 5.3242-16.574 5.3711-16.723 3.9336-12.215 15.496-12.844 16.684-12.875h32.891v-19.734h-32.891c-9.3125 0-28.707 5.5547-35.473 26.555-0.027344 0.10547-12.191 37.934-24.836 77.285-6.0195-1.2305-12.238-1.8867-18.629-1.8867-50.844-0.003906-92.07 41.223-92.07 92.078 0 50.863 41.227 92.094 92.082 92.094 50.863 0 92.086-41.23 92.086-92.094 0-37.527-22.492-69.754-54.688-84.098 2.2578-7.0312 4.4961-14.012 6.6602-20.742 86.348 97.902 86.824 98.387 87.098 98.664 16.047 16.047 32.359 16.047 53.016 16.047h13.707c4.9258 46.215 44.016 82.223 91.539 82.223 50.863 0 92.082-41.23 92.082-92.094 0-50.855-41.223-92.082-92.086-92.082zm-217.05 92.082c0 39.957-32.395 72.359-72.359 72.359-39.961 0-72.348-32.402-72.348-72.359 0-39.953 32.395-72.348 72.348-72.348 4.2812 0 8.4453 0.44531 12.527 1.1602-11.547 35.93-21.914 68.176-21.914 68.176l0.042969 0.015625c-0.30859 0.94531-0.51562 1.9453-0.51562 3.0039 0 5.4492 4.4219 9.8633 9.8633 9.8633 4.3984 0 8.0781-2.8828 9.3594-6.8594l0.039062 0.007812s10.371-32.246 21.906-68.172c24.258 11.688 41.051 36.43 41.051 65.152zm201.73-9.8633h-56.27c2.9453-21.578 15.371-40.09 32.984-51.242zm-109.71-0.79688c-7.7969-1.043-13.25-3.4414-18.969-9.1562-1.6992-1.8789-58.457-66.227-92.785-105.15h152.89zm20.684 0.79688 39.352-109.31 18.18 39.988c-24.379 14.449-41.562 39.762-44.707 69.316zm104.36 82.223c-36.602 0-66.773-27.211-71.602-62.488h71.602c5.4453 0 9.8711-4.4141 9.8711-9.8633 0-1.4531-0.33984-2.832-0.90625-4.0664l0.019531-0.007813-29.652-65.234c6.5508-1.9453 13.484-3.0352 20.668-3.0352 39.961 0 72.348 32.398 72.348 72.348 0.003906 39.945-32.391 72.348-72.348 72.348z\" />\n    </g>\n    <path d=\"m547.01 479.59c-12.531 0-23.891 5.0312-32.195 13.152h-215.24c-13.645-23.574-39.078-39.465-68.285-39.465-29.195 0-54.633 15.887-68.285 39.465h68.285l32.891 39.465-32.891 39.469h-68.285c13.652 23.574 39.09 39.465 68.285 39.465 34.355 0 63.504-21.98 74.348-52.613h209.18c8.3008 8.1328 19.66 13.152 32.195 13.152 25.43 0 46.047-20.609 46.047-46.043s-20.617-46.047-46.047-46.047zm0 72.355c-14.523 0-26.309-11.766-26.309-26.309 0-14.535 11.777-26.312 26.309-26.312 14.539 0 26.316 11.773 26.316 26.312s-11.773 26.309-26.316 26.309z\" />\n  </svg>\n);\n","export default (props: { size: number; color: string }) => (\n  <svg\n    width={props.size}\n    height={props.size}\n    version=\"1.1\"\n    viewBox=\"0 0 752 752\"\n    style={{\n      background: props.color,\n      border: \"1px solid black\",\n      borderRadius: props.size / 3.3,\n      overflow: \"hidden\"\n    }}\n  >\n    <g\n      style={{ transform: \"scale(1.3)\", transformOrigin: \"50% 50%\" }}\n      stroke=\"black\"\n      strokeWidth={4}\n    >\n      <path\n        d=\"m37.602 0h676.8c20.766 0 37.602 20.766 37.602 37.602v676.8c0 20.766-16.836 37.602-37.602 37.602h-676.8c-20.766 0-37.602-20.766-37.602-37.602v-676.8c0-20.766 16.836-37.602 37.602-37.602z\"\n        fill=\"#fff\"\n      />\n      <path d=\"m376 526.07c109.66 0 195.55-38.848 195.55-88.379v-0.09375c-0.054688-28.008-27.75-53.461-76.152-70.148v-0.074218h0.003906c0.027344-7.5547-2.3555-14.918-6.7969-21.027s-10.715-10.645-17.91-12.945l-49.996-23.844v-0.003907c7.25-10.844 10.309-23.957 8.6055-36.891-1.6992-12.934-8.0469-24.809-17.855-33.41-9.8047-8.6016-22.406-13.344-35.453-13.344-13.043 0-25.645 4.7422-35.453 13.344-9.8047 8.6016-16.152 20.477-17.855 33.41-1.6992 12.934 1.3594 26.047 8.6055 36.891l-49.949 23.844 0.003906 0.003907c-7.1953 2.3008-13.469 6.8359-17.91 12.945-4.4453 6.1094-6.8242 13.473-6.7969 21.027v0.074218c-48.449 16.703-76.152 42.195-76.152 70.242-0.046876 49.559 85.844 88.379 195.51 88.379zm119.41-103.73v-45.617c40.645 14.605 65.375 35.961 67.293 58.188l-30.84 13.664c-8.6328 3.793-18.629 2.7383-26.281-2.7773l-0.44531-0.31641 0.003907 0.003906c-4.9141-3.5469-10.379-6.25-16.18-8.0039 4.1172-3.9609 6.4453-9.4258 6.4492-15.141zm-164.44-142.62c-0.03125-14.586 7.0039-28.285 18.879-36.754 11.875-8.4727 27.117-10.668 40.902-5.8945 13.781 4.7734 24.398 15.93 28.488 29.934 4.0859 14 1.1406 29.117-7.9102 40.559-0.58984 0.42969-1.0664 1.0039-1.375 1.6641-8.5352 9.8359-20.918 15.484-33.938 15.484-13.023 0-25.402-5.6484-33.938-15.484-0.30859-0.66016-0.78516-1.2305-1.3789-1.6562-6.2969-7.918-9.7266-17.734-9.7305-27.852zm-65.672 92.164c0.30859-0.89844 0.30859-1.875 0-2.7734v-1.75c-0.027344-5.7461 1.7969-11.352 5.1953-15.984 3.4023-4.6367 8.1992-8.0547 13.691-9.7578 0.19922-0.054687 0.39062-0.12891 0.57422-0.21875l52.102-24.855c10.141 10.797 24.297 16.922 39.109 16.922s28.965-6.125 39.105-16.922l52.102 24.855h0.003906c0.18359 0.089844 0.375 0.16406 0.57422 0.21875 5.4883 1.7031 10.289 5.1211 13.688 9.7578 3.4023 4.6328 5.2227 10.238 5.1992 15.984v1.7578c-0.30078 0.90234-0.30078 1.875 0 2.7773v50.449-0.003907c0.089843 3.3438-1.1719 6.582-3.5039 8.9766-2.332 2.3945-5.5352 3.7461-8.8789 3.7461-3.3398 0-6.543-1.3516-8.875-3.7461-2.332-2.3945-3.5938-5.6328-3.5039-8.9766v-53.359c0-1.8477-1.1641-3.4961-2.9062-4.1172-0.40234-0.14062-0.79688-0.30469-1.1836-0.48828l-25.336-12.09h0.003906c-1.3555-0.64844-2.9453-0.55859-4.2148 0.24219s-2.0391 2.1953-2.0391 3.6953v93.785c-4.0508-0.16406-8-1.3125-11.508-3.3516-13.555-7.8828-29.688-10.059-44.852-6.0469l-22.32 5.8555h0.003907c-7.3398 1.9062-15.145 0.55859-21.414-3.6992l-0.37891-0.24219v-86.301c0-1.5-0.76953-2.8945-2.0391-3.6953-1.2695-0.80078-2.8594-0.89062-4.2148-0.24219l-25.324 12.09c-0.39062 0.18359-0.78906 0.34766-1.1953 0.48828-1.7383 0.62109-2.9023 2.2695-2.9023 4.1172v53.359c0.089843 3.3438-1.1719 6.582-3.5039 8.9766-2.332 2.3945-5.5352 3.7461-8.8789 3.7461s-6.543-1.3516-8.875-3.7461c-2.332-2.3945-3.5938-5.6328-3.5039-8.9766zm193.77 65.109c-6.3672 1.6758-12.379 4.5-17.738 8.3242l-0.43359 0.30469h-0.003906c-1.8242 1.3086-3.832 2.3438-5.957 3.0703v-85.559l18.211 8.6836v50.512l0.003906 0.003907c0.003907 5.4766 2.1406 10.734 5.957 14.66zm-142.03-73.848v75.031c-7.9727-2.793-16.625-3.0039-24.723-0.60156 4.1445-3.9805 6.4844-9.4844 6.4727-15.234v-50.504zm-127.88 74.551c0-23.215 25.074-45.766 67.422-60.973v45.621l-0.003906-0.003907c0.007813 5.5977 2.2305 10.965 6.1875 14.926 3.957 3.957 9.3242 6.1836 14.922 6.1914 0.76953 0 1.5391-0.042969 2.3047-0.12891l-6.2891 3.5625h-0.003906c-5.9961 3.375-13.34 3.2969-19.266-0.20312l-1.9336-1.1484c-12.594-7.4648-28.031-8.3398-41.391-2.3516l-19.035 8.5547v0.003906c-1.9023-4.4414-2.8945-9.2188-2.9141-14.051zm25.527 13.457c10.766-4.8242 23.207-4.1172 33.355 1.8984l1.9258 1.1484-0.003906-0.003906c8.625 5.0977 19.309 5.2109 28.035 0.29688l10.129-5.7148c5.1562-2.918 11.027-4.3281 16.945-4.0781 5.918 0.25391 11.648 2.1562 16.539 5.5 8.2891 5.5234 18.543 7.2344 28.176 4.7109l22.309-5.8281c13.07-3.4336 26.973-1.5039 38.617 5.3555 5.4258 3.1289 11.633 4.6328 17.887 4.3398 6.2539-0.29297 12.293-2.375 17.402-5.9961l0.43359-0.31641c7.8242-5.582 17.203-8.5664 26.816-8.5391 9.6133 0.027343 18.973 3.0703 26.766 8.6992l0.44531 0.32422c10.176 7.3086 23.461 8.6953 34.926 3.6445l26.695-11.82c-8.3789 40.633-88.629 72.609-186.09 72.609-85.336 0-157.48-24.52-179.75-57.902z\" />\n      <path d=\"m196.1 330.68c3.6445 3.6289 5.4102 8.7422 4.7773 13.848-0.63281 5.1055-3.5938 9.6328-8.0156 12.262-1.6836 1.0078-2.4883 3.0117-1.9688 4.9023s2.2383 3.2031 4.1992 3.2109c0.78125 0 1.5469-0.21094 2.2188-0.60938 6.7422-4 11.258-10.895 12.223-18.676s-1.7227-15.57-7.2852-21.098l-2.3477-2.332c-3.6719-3.6328-5.4805-8.7422-4.918-13.879 0.5625-5.1328 3.4336-9.7305 7.8047-12.484 1.9453-1.3164 2.5-3.9375 1.2578-5.9297-1.2461-1.9922-3.8477-2.6406-5.8828-1.4688-6.6133 4.1797-10.961 11.141-11.812 18.918-0.85156 7.7734 1.8867 15.512 7.4375 21.023z\" />\n      <path d=\"m248.36 284.08c3.6406 3.6289 5.3984 8.7383 4.7656 13.84-0.63281 5.1016-3.5859 9.625-8 12.254-1.6953 1.0039-2.5078 3.0156-1.9844 4.9102 0.51953 1.8984 2.2461 3.2109 4.2109 3.2109 0.78125 0.003906 1.5508-0.21094 2.2188-0.60938 6.7461-4 11.258-10.895 12.227-18.676 0.96484-7.7812-1.7266-15.57-7.2852-21.098l-2.3477-2.332h-0.003906c-3.6641-3.6367-5.4727-8.7422-4.9102-13.875s3.4336-9.7305 7.7969-12.488c1.0273-0.58984 1.7695-1.5742 2.0586-2.7227 0.28516-1.1484 0.09375-2.3672-0.53516-3.3711s-1.6367-1.7109-2.7969-1.957c-1.1602-0.24609-2.3672-0.011718-3.3516 0.65234-6.6211 4.1719-10.977 11.137-11.832 18.918-0.85156 7.7773 1.8906 15.523 7.4492 21.031z\" />\n      <path d=\"m552.21 330.68c3.6406 3.6289 5.3984 8.7344 4.7656 13.836-0.63281 5.1016-3.5859 9.625-8.0039 12.254-1.6914 1.0039-2.5039 3.0156-1.9844 4.9141 0.52344 1.8945 2.2461 3.2109 4.2148 3.2109 0.77734 0 1.543-0.21094 2.2109-0.61328 6.7461-3.9961 11.266-10.891 12.234-18.672s-1.7227-15.574-7.2852-21.102l-2.3477-2.332-0.003907 0.003907c-3.6641-3.6367-5.4727-8.7461-4.9141-13.879 0.5625-5.1328 3.4336-9.7266 7.8008-12.484 1.0273-0.58984 1.7695-1.5742 2.0547-2.7266 0.28906-1.1484 0.09375-2.3633-0.53125-3.3711-0.62891-1.0039-1.6406-1.7109-2.7969-1.957-1.1602-0.24609-2.3711-0.007813-3.3516 0.65625-6.6133 4.1758-10.965 11.141-11.816 18.918-0.85156 7.7773 1.8867 15.52 7.4414 21.031z\" />\n      <path d=\"m499.95 284.08c3.6406 3.6328 5.3984 8.7383 4.7617 13.84-0.63281 5.1016-3.5898 9.625-8.0078 12.254-2.0742 1.2305-2.7578 3.9102-1.5273 5.9844 1.2344 2.0742 3.9141 2.7578 5.9844 1.5273 6.7422-4.0039 11.254-10.898 12.219-18.676 0.96484-7.7812-1.7188-15.57-7.2773-21.098l-2.3477-2.332h-0.003906c-3.668-3.6328-5.4805-8.7422-4.918-13.879 0.5625-5.1328 3.4375-9.7305 7.8047-12.484 1.9492-1.3125 2.5039-3.9375 1.2578-5.9297-1.2461-1.9922-3.8438-2.6406-5.8828-1.4688-6.6172 4.1758-10.969 11.141-11.82 18.922-0.85156 7.7773 1.8906 15.52 7.4453 21.027z\" />\n    </g>\n  </svg>\n);\n","import * as localforage from \"localforage\";\nimport uniqBy from \"lodash/uniqBy\";\nimport DrinkingWaterMarker from \"./DrinkingWaterMarker\";\nimport PublicToiletsMarker from \"./PublicToiletsMarker\";\nimport PublicShowerMarker from \"./PublicShowerMarker\";\nimport BicycleRepairStationMarker from \"./BicycleRepairStationMarker\";\nimport PublicBathMarker from \"./PublicBathMarker\";\nimport OpeningHours from \"opening_hours\";\n\nimport \"localforage-getitems\";\n\ntype AmenityTags = { mapillary?: string } & (\n  | {\n      amenity: \"drinking_water\";\n    }\n  | {\n      amenity: \"toilets\";\n      access?: \"yes\" | \"public\" | \"permissive\" | \"unknown\";\n      changing_table?: \"yes\" | \"no\" | \"unknown\";\n      fee?: \"yes\" | \"no\" | \"unknown\";\n      charge?: string;\n      wheelchair?: \"yes\" | \"no\" | \"unknown\" | \"limited\";\n      unisex?: \"yes\" | \"male\" | \"female\";\n      opening_hours?: string;\n    }\n  | {\n      amenity: \"shower\";\n      access?: \"yes\" | \"public\" | \"permissive\" | \"unknown\";\n      hot_water?: \"yes\" | \"no\" | \"unknown\";\n      fee?: \"yes\" | \"no\" | \"unknown\";\n      charge?: string;\n      wheelchair?: \"yes\" | \"no\" | \"unknown\" | \"limited\";\n      opening_hours?: string;\n    }\n  | {\n      amenity: \"public_bath\";\n      access?: \"yes\" | \"public\" | \"permissive\" | \"unknown\";\n      fee?: \"yes\" | \"no\" | \"unknown\";\n      charge?: string;\n      opening_hours?: string;\n    }\n  | {\n      amenity: \"bicycle_repair_station\";\n    }\n);\n\nexport type OpenStreetMapNode = {\n  id: number;\n  lat: number;\n  lon: number;\n  tags: AmenityTags;\n};\n\nconst amenitiesMap: { [k in Amenity]: Amenity } = {\n  drinking_water: \"drinking_water\",\n  shower: \"shower\",\n  toilets: \"toilets\",\n  public_bath: \"public_bath\",\n  bicycle_repair_station: \"bicycle_repair_station\"\n};\n\nexport const amenities = Object.values(amenitiesMap);\n\nexport type Amenity = AmenityTags[\"amenity\"];\n\nexport type Options = {\n  around: number;\n  lat: number;\n  lng: number;\n};\n\nexport const updateCachedItems = async (newNodes: OpenStreetMapNode[]) => {\n  const cachedItems =\n    (await localforage.getItem<OpenStreetMapNode[]>(\"amenities\")) || [];\n\n  const nodes = uniqBy(newNodes.concat(cachedItems), i => i.id);\n\n  // fire&forget\n  localforage.setItem(\"amenities\", nodes);\n};\n\nexport default async (options: Options): Promise<OpenStreetMapNode[]> => {\n  const formData = `\n    [out:json];\n    (node[\"amenity\"~\"${amenities.join(\"|\")}\"](around:${options.around},${\n    options.lat\n  },${options.lng}););\n    out;>;out;\n  `;\n\n  // const OverpassApiService = 'https://overpass-api.de/api/interpreter'\n  const OverpassApiService = \"https://overpass.kumi.systems/api/interpreter\";\n\n  const res = await fetch(`${OverpassApiService}?data=${formData}&output`);\n\n  const json: { elements: OpenStreetMapNode[] } = await res.json();\n\n  updateCachedItems(json.elements);\n\n  return json.elements;\n};\n\nexport const getAmenityMarker = (\n  amenityTags: AmenityTags,\n  size: number\n): JSX.Element => {\n  const disabledColor = \"#d0d0d0\";\n\n  const closed = (): string | null => {\n    try {\n      if (\"opening_hours\" in amenityTags && amenityTags.opening_hours) {\n        const oh = new OpeningHours(amenityTags.opening_hours);\n\n        return oh.getUnknown() ? null : oh.getState() ? null : disabledColor;\n      }\n\n      return null;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  const notPublic = (): string | null => {\n    return \"access\" in amenityTags &&\n      amenityTags.access &&\n      ![\"yes\", \"public\", \"unknown\", \"permissive\"].includes(amenityTags.access)\n      ? disabledColor\n      : null;\n  };\n\n  const feeRequired = (): string | null => {\n    return \"fee\" in amenityTags &&\n      typeof amenityTags.fee === \"string\" &&\n      amenityTags.fee !== \"no\"\n      ? \"gold\"\n      : null;\n  };\n\n  const color = (): string => {\n    return closed() || notPublic() || feeRequired() || \"white\";\n  };\n\n  switch (amenityTags.amenity) {\n    case \"drinking_water\":\n      return <DrinkingWaterMarker size={size} />;\n    case \"toilets\":\n      return <PublicToiletsMarker size={size} color={color()} />;\n    case \"shower\":\n      return <PublicShowerMarker size={size} color={color()} />;\n    case \"bicycle_repair_station\":\n      return <BicycleRepairStationMarker size={size} />;\n    case \"public_bath\":\n      return <PublicBathMarker size={size} color={color()} />;\n  }\n};\n\nexport const getAmenityTitle = (amenity: Amenity): string => {\n  switch (amenity) {\n    case \"drinking_water\":\n      return \"Drinking Water\";\n    case \"toilets\":\n      return \"Public Toilets\";\n    case \"shower\":\n      return \"Public Shower\";\n    case \"bicycle_repair_station\":\n      return \"Bicycle Repair Station\";\n    case \"public_bath\":\n      return \"Public Bath\";\n  }\n};\n","export default () => (\n  <svg fill=\"#000000\" viewBox=\"0 0 30 30\" width=\"20px\" height=\"20px\">\n    <path d=\"M 3 7 A 1.0001 1.0001 0 1 0 3 9 L 27 9 A 1.0001 1.0001 0 1 0 27 7 L 3 7 z M 3 14 A 1.0001 1.0001 0 1 0 3 16 L 27 16 A 1.0001 1.0001 0 1 0 27 14 L 3 14 z M 3 21 A 1.0001 1.0001 0 1 0 3 23 L 27 23 A 1.0001 1.0001 0 1 0 27 21 L 3 21 z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport View from \"react-flexview\";\n\nexport const Popup = (props: {\n  children: View.Props[\"children\"];\n  onClose: () => void;\n  isOpen: boolean;\n  style?: React.CSSProperties;\n}) => {\n  return (\n    <View\n      className=\"popup\"\n      style={{\n        ...props.style,\n        display: props.isOpen ? \"flex\" : \"none\"\n      }}\n      hAlignContent=\"center\"\n      vAlignContent=\"center\"\n      onClick={e => {\n        e.stopPropagation();\n        props.onClose();\n      }}\n      shrink={false}\n    >\n      <View\n        className=\"popup-content\"\n        column\n        onClick={e => {\n          e.stopPropagation();\n        }}\n      >\n        {props.children}\n      </View>\n    </View>\n  );\n};\n","import { OpenStreetMapNode } from \"./getOpenStreetMapAmenities\";\nimport localforage from \"localforage\";\n\n// import type OsmAuth from \"osm-auth\";\nconst _osmAuth = require(\"osm-auth\").osmAuth; // CJS named import\n\nimport { Builder } from \"xml2js\";\n\nconst xmlBuilder = new Builder();\n\nexport const osmAuth = new _osmAuth({\n  client_id: \"UzKLAo2Jaaq3uuekbiMxIBX4NQQk5NrVwqMtKZZT7tA\",\n  client_secret: \"qzp6Ydy22GiZKq0WZ-prWj1AVI9fNGOLsQckEhqRr6o\",\n  redirect_uri: \"https://francescocioria.github.io/fontanelle/\",\n  scope: \"write_api\"\n});\n\nconst osmApi = <R>(options: {\n  method: string;\n  path: string;\n  headers?: { [k: string]: string };\n  content?: string;\n}): Promise<R> => {\n  return new Promise((resolve, reject) => {\n    osmAuth.xhr(options, (err: any, result: any) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(result);\n      }\n    });\n  });\n};\n\nconst osmGet = <R>(options: { path: string }): Promise<R> =>\n  osmApi<string>({\n    method: \"GET\",\n    path: options.path,\n    headers: {\n      Accept: \"application/json\"\n    }\n  }).then(JSON.parse);\n\nconst osmPut = <R>(options: {\n  path: string;\n  content: { osm?: { [k in \"node\" | \"changeset\"]?: object } };\n}) => {\n  return osmApi<R>({\n    method: \"PUT\",\n    path: options.path,\n    headers: { \"Content-Type\": \"text/xml\" },\n    content: xmlBuilder.buildObject(options.content)\n  });\n};\n\nconst wrapInChangeset = async <R>(\n  changesetComment: string,\n  mutation: (changesetId: string) => Promise<R>\n) => {\n  const changesetId = await osmPut<string>({\n    path: \"/api/0.6/changeset/create\",\n\n    content: {\n      osm: { changeset: { tag: { $: { k: \"comment\", v: changesetComment } } } }\n    }\n  });\n\n  const res = await mutation(changesetId);\n\n  await osmPut({\n    path: `/api/0.6/changeset/${changesetId}/close`,\n    content: {}\n  });\n\n  return res;\n};\n\nexport const osmUpdateNode = async (\n  node: OpenStreetMapNode\n): Promise<OpenStreetMapNode> => {\n  await wrapInChangeset(\n    `Update \"${node.tags.amenity}\" amenity`,\n    async changesetId => {\n      const {\n        elements: [fetchedNode]\n      } = await osmGet<{ elements: [OpenStreetMapNode & { version: number }] }>(\n        {\n          path: `/api/0.6/node/${node.id}`\n        }\n      );\n\n      osmPut({\n        path: `/api/0.6/node/${node.id}`,\n\n        content: {\n          osm: {\n            node: {\n              $: {\n                changeset: changesetId,\n                id: node.id,\n                lat: node.lat,\n                lon: node.lon,\n                version: fetchedNode.version\n              },\n              tag: (Object.keys(node.tags) as Array<keyof typeof node.tags>)\n                .filter(t => node.tags[t])\n                .map(k => ({\n                  $: {\n                    k: k,\n                    v: node.tags[k]\n                  }\n                }))\n            }\n          }\n        }\n      });\n    }\n  );\n\n  return node;\n};\n\nexport const osmCreateNode = async (\n  node: Omit<OpenStreetMapNode, \"id\">\n): Promise<OpenStreetMapNode> => {\n  const nodeId = await wrapInChangeset<string>(\n    `Add \"${node.tags.amenity}\" amenity`,\n    changesetId =>\n      osmPut({\n        path: `/api/0.6/node/create`,\n        content: {\n          osm: {\n            node: {\n              $: {\n                changeset: changesetId,\n                lat: node.lat,\n                lon: node.lon\n              },\n              tag: (Object.keys(node.tags) as Array<keyof typeof node.tags>)\n                .filter(t => node.tags[t])\n                .map(k => ({\n                  $: {\n                    k: k,\n                    v: node.tags[k]\n                  }\n                }))\n            }\n          }\n        }\n      })\n  );\n\n  return {\n    ...node,\n    id: parseInt(nodeId)\n  };\n};\n","import * as React from \"react\";\nimport View from \"react-flexview\";\n\ntype Option<V extends string> = {\n  value: V | null;\n  label: string;\n};\n\nexport const Select = <V extends string>(props: {\n  value?: V;\n  label: string;\n  onChange: (value: V) => void;\n  options: Option<V>[];\n}) => {\n  return (\n    <View column className=\"select\" shrink={false}>\n      <span className=\"select-label\">{props.label}</span>\n      <select\n        value={props.value}\n        onChange={e => props.onChange(e.currentTarget.value as V)}\n      >\n        <option value=\"\">Select an option</option>\n        {props.options.map(o => (\n          <option key={o.value} value={o.value || \"\"}>\n            {o.label}\n          </option>\n        ))}\n      </select>\n    </View>\n  );\n};\n\nexport const Input = (props: {\n  value?: string;\n  label: string;\n  onChange: (value: string) => void;\n}) => {\n  return (\n    <View column className=\"input\" shrink={false}>\n      <span className=\"input-label\">{props.label}</span>\n      <input\n        value={props.value || \"\"}\n        onChange={e => props.onChange(e.currentTarget.value)}\n      />\n    </View>\n  );\n};\n\nexport const Checkbox = (props: {\n  label: string;\n  value: boolean;\n  onChange: (value: boolean) => void;\n}) => (\n  <View\n    className=\"checkbox\"\n    vAlignContent=\"center\"\n    onClick={() => props.onChange(!props.value)}\n    shrink={false}\n  >\n    <input\n      checked={props.value}\n      type=\"checkbox\"\n      onChange={e => {\n        props.onChange(e.currentTarget.checked);\n      }}\n    />\n    <span className=\"checkbox-label\">{props.label}</span>\n  </View>\n);\n\nexport const Button = (props: {\n  label: string;\n  onClick: () => void;\n  style?: React.CSSProperties;\n}) => {\n  return (\n    <button className=\"button\" style={props.style} onClick={props.onClick}>\n      {props.label}\n    </button>\n  );\n};\n","import * as React from \"react\";\nimport View from \"react-flexview\";\nimport { Popup } from \"./Popup\";\nimport {\n  getAmenityTitle,\n  OpenStreetMapNode\n} from \"./getOpenStreetMapAmenities\";\nimport { osmAuth, osmCreateNode, osmUpdateNode } from \"./osm\";\nimport { Select, Input, Button } from \"./form\";\n\nexport type UpsertNode =\n  | {\n      type: \"create_without_coordinates\";\n      node: Omit<OpenStreetMapNode, \"id\" | \"lat\" | \"lon\">;\n    }\n  | {\n      type: \"create\";\n      node: Omit<OpenStreetMapNode, \"id\">;\n    }\n  | {\n      type: \"update\";\n      node: OpenStreetMapNode;\n    }\n  | {\n      type: \"update_without_coordinates\";\n      node: Omit<OpenStreetMapNode, \"lat\" | \"lon\">;\n    };\n\ntype Props = {\n  map: mapboxgl.Map;\n  onClose: () => void;\n  onDone: (node: OpenStreetMapNode) => void;\n} & UpsertNode;\n\nexport const UpsertNodePopup = (props: Props) => {\n  const [state, updateState] = React.useState<UpsertNode>(props);\n\n  const editNodeTag = (tag: string, value: string) => {\n    const tags: OpenStreetMapNode[\"tags\"] = {\n      ...state.node.tags,\n      [tag]: value || null\n    };\n\n    updateState({\n      ...state,\n      node: {\n        ...state.node,\n        tags\n      } as never\n    });\n  };\n\n  const getForm = () => {\n    const node = state.node;\n\n    return (\n      <View column shrink={false}>\n        <Button\n          label=\"Change Position\"\n          onClick={() => {\n            if (state.type === \"create\") {\n              updateState({\n                type: \"create_without_coordinates\",\n                node: {\n                  ...state.node\n                }\n              });\n            } else if (state.type === \"update\") {\n              updateState({\n                type: \"update_without_coordinates\",\n                node: {\n                  ...state.node\n                }\n              });\n            }\n          }}\n        />\n\n        {(node.tags.amenity === \"toilets\" ||\n          node.tags.amenity === \"shower\" ||\n          node.tags.amenity === \"public_bath\") && (\n          <Select\n            value={node.tags.access === \"public\" ? \"yes\" : node.tags.access}\n            label=\"Access\"\n            onChange={v => editNodeTag(\"access\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"permissive\", label: \"Permissive\" },\n              { value: \"customers\", label: \"Customers\" }\n            ]}\n          />\n        )}\n\n        {(node.tags.amenity === \"toilets\" ||\n          node.tags.amenity === \"shower\" ||\n          node.tags.amenity === \"public_bath\") && (\n          <Select\n            value={node.tags.fee}\n            label=\"Fee\"\n            onChange={v => editNodeTag(\"fee\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"no\", label: \"No\" }\n            ]}\n          />\n        )}\n\n        {(node.tags.amenity === \"toilets\" ||\n          node.tags.amenity === \"shower\" ||\n          node.tags.amenity === \"public_bath\") &&\n        node.tags.fee === \"yes\" ? (\n          <Input\n            value={node.tags.charge}\n            label=\"Fee Amount\"\n            onChange={v => editNodeTag(\"charge\", v)}\n          />\n        ) : (\n          <div />\n        )}\n\n        {node.tags.amenity === \"toilets\" && (\n          <Select\n            value={node.tags.unisex}\n            label=\"Gender\"\n            onChange={v => editNodeTag(\"unisex\", v)}\n            options={[\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"male\", label: \"Male\" },\n              { value: \"female\", label: \"Female\" }\n            ]}\n          />\n        )}\n\n        {node.tags.amenity === \"toilets\" && (\n          <Select\n            value={node.tags.changing_table}\n            label=\"Changing Table\"\n            onChange={v => editNodeTag(\"changing_table\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"no\", label: \"No\" }\n            ]}\n          />\n        )}\n\n        {node.tags.amenity === \"shower\" && (\n          <Select\n            value={node.tags.hot_water}\n            label=\"Hot Water\"\n            onChange={v => editNodeTag(\"hot_water\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"no\", label: \"No\" }\n            ]}\n          />\n        )}\n\n        {(node.tags.amenity === \"toilets\" ||\n          node.tags.amenity === \"shower\") && (\n          <Select\n            value={node.tags.wheelchair}\n            label=\"Wheelchair\"\n            onChange={v => editNodeTag(\"wheelchair\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"no\", label: \"No\" },\n              { value: \"limited\", label: \"Limited\" }\n            ]}\n          />\n        )}\n      </View>\n    );\n  };\n\n  if (osmAuth.authenticated()) {\n    switch (state.type) {\n      case \"create_without_coordinates\":\n      case \"update_without_coordinates\": {\n        return (\n          <>\n            <View\n              style={{\n                position: \"fixed\",\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                zIndex: 99999,\n                pointerEvents: \"none\",\n                fontSize: 24\n              }}\n              vAlignContent=\"center\"\n              hAlignContent=\"center\"\n              grow\n            >\n              ✕\n            </View>\n\n            <View\n              style={{\n                position: \"fixed\",\n                left: 0,\n                right: 0,\n                bottom: 66,\n                zIndex: 99999\n              }}\n              vAlignContent=\"center\"\n              hAlignContent=\"center\"\n            >\n              <View\n                style={{\n                  paddingTop: 16,\n                  paddingBottom: 16,\n                  paddingRight: 48,\n                  paddingLeft: 48,\n                  borderRadius: 8,\n                  background: \"rgba(0, 0, 0, 0.1)\"\n                }}\n              >\n                <Button\n                  label=\"Cancel\"\n                  style={{ marginRight: 32 }}\n                  onClick={props.onClose}\n                />\n\n                <Button\n                  label=\"Confirm\"\n                  onClick={() => {\n                    const coordinates = {\n                      lat: props.map.getCenter().lat,\n                      lon: props.map.getCenter().lng\n                    };\n                    if (state.type === \"create_without_coordinates\") {\n                      updateState({\n                        type: \"create\",\n                        node: {\n                          ...state.node,\n                          ...coordinates\n                        }\n                      });\n                    } else {\n                      updateState({\n                        type: \"update\",\n                        node: {\n                          ...state.node,\n                          ...coordinates\n                        }\n                      });\n                    }\n                  }}\n                />\n              </View>\n            </View>\n          </>\n        );\n      }\n\n      case \"create\":\n      case \"update\": {\n        return (\n          <Popup onClose={props.onClose} isOpen={true}>\n            <h2 style={{ margin: 0, textAlign: \"center\" }}>\n              {getAmenityTitle(props.node.tags.amenity)}\n            </h2>\n\n            <View style={{ margin: \"16px 0 24px\" }} className=\"separator\" />\n\n            {getForm()}\n\n            <View style={{ marginTop: 32 }} className=\"separator\" />\n\n            <Button\n              label=\"Save on OSM\"\n              style={{\n                marginTop: 24,\n                background: \"#24A0ED\"\n              }}\n              onClick={() => {\n                if (state.type === \"create\") {\n                  // create\n                  osmCreateNode({ ...state.node }).then(props.onDone);\n                } else {\n                  // update\n                  osmUpdateNode({ ...state.node }).then(props.onDone);\n                }\n              }}\n            />\n          </Popup>\n        );\n      }\n    }\n  } else {\n    // user is not logged in OSM\n    return (\n      <Popup onClose={props.onClose} isOpen={true}>\n        <h2>\n          You need to be logged into Open Street Maps to add and edit nodes\n        </h2>\n\n        <Button\n          label=\"Log in OSM\"\n          style={{\n            marginTop: 48,\n            marginLeft: \"auto\",\n            flexShrink: 0\n          }}\n          onClick={() => {\n            osmAuth.authenticate(() => {\n              updateState({ ...state });\n            });\n          }}\n        />\n      </Popup>\n    );\n  }\n};\n","import { useEffect, useState } from \"react\";\nimport { BottomSheet } from \"react-spring-bottom-sheet\";\nimport {\n  getAmenityMarker,\n  getAmenityTitle,\n  OpenStreetMapNode\n} from \"./getOpenStreetMapAmenities\";\nimport View from \"react-flexview\";\nimport { Button } from \"./form\";\nimport capitalize from \"lodash/capitalize\";\n\nimport \"react-spring-bottom-sheet/dist/style.css\";\n\nconst Amenity = (props: { label: string; value: string }): JSX.Element => {\n  return (\n    <View style={{ marginTop: 16 }} column>\n      <span style={{ fontSize: 18, fontWeight: 600, marginBottom: 6 }}>\n        {capitalize(props.label)}\n      </span>\n      <span style={{ fontSize: 18, wordBreak: \"break-all\" }}>\n        {props.value}\n      </span>\n    </View>\n  );\n};\n\ntype Props = {\n  node: OpenStreetMapNode;\n  onDismiss: () => void;\n  onEditNode: (node: OpenStreetMapNode) => void;\n};\n\nexport default (props: Props) => {\n  const [isOpen, updateOpen] = useState(true);\n\n  useEffect(() => {\n    updateOpen(true);\n  }, [props.node]);\n\n  const openUrl = (url: string) => window.open(url, \"_blank\");\n\n  return (\n    <BottomSheet\n      style={{ borderRadius: 40 }}\n      open={isOpen}\n      onDismiss={() => updateOpen(false)}\n      onSpringEnd={() => !isOpen && props.onDismiss()}\n      snapPoints={({ maxHeight }) => {\n        return [window.innerHeight * 0.45, maxHeight];\n      }}\n      defaultSnap={({ snapPoints }) => snapPoints[0]}\n      maxHeight={window.innerHeight * 0.85}\n      expandOnContentDrag={true}\n    >\n      <View\n        column\n        shrink={false}\n        style={{ padding: 32, paddingTop: 12, minHeight: \"35vh\" }}\n      >\n        <View vAlignContent=\"center\">\n          {getAmenityMarker(props.node.tags, 48)}\n          <span style={{ marginLeft: 16, fontSize: 24 }}>\n            {getAmenityTitle(props.node.tags.amenity)}\n          </span>\n        </View>\n\n        <View\n          style={{\n            borderTop: \"1px solid #e0e0e0\",\n            borderBottom: \"1px solid #e0e0e0\",\n            margin: \"16px 0\",\n            padding: \"16px 0\"\n          }}\n        >\n          <Button\n            style={{ flexGrow: 1 }}\n            label=\"Directions\"\n            onClick={() =>\n              openUrl(\n                `https://www.google.com/maps/dir//${props.node.lat},${props.node.lon}`\n              )\n            }\n          />\n\n          {props.node.tags.mapillary && (\n            <Button\n              style={{ flexGrow: 1, marginLeft: 16 }}\n              label=\"See street view\"\n              onClick={() => openUrl(props.node.tags.mapillary!)}\n            />\n          )}\n\n          <Button\n            style={{ flexGrow: 1, marginLeft: 16 }}\n            label=\"Edit node\"\n            onClick={() => {\n              props.onEditNode(props.node);\n              props.onDismiss();\n            }}\n          />\n        </View>\n\n        {Object.keys(props.node.tags).map(k => (\n          <Amenity key={k} label={k} value={props.node.tags[k as never]} />\n        ))}\n      </View>\n    </BottomSheet>\n  );\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport debounce from \"lodash/debounce\";\nimport View from \"react-flexview\";\nimport { Option, none, some, map, isSome } from \"fp-ts/lib/Option\";\nimport getOpenStreetMapAmenities, {\n  OpenStreetMapNode,\n  updateCachedItems,\n  getAmenityMarker,\n  Amenity,\n  getAmenityTitle,\n  amenities\n} from \"./getOpenStreetMapAmenities\";\nimport distance from \"@turf/distance\";\nimport localforage from \"localforage\";\nimport MenuIcon from \"./MenuIcon\";\nimport * as MapboxCircle from \"mapbox-gl-circle\";\nimport LoadingBar, { LoadingBarRef } from \"react-top-loading-bar\";\nimport { Popup } from \"./Popup\";\nimport { UpsertNode, UpsertNodePopup } from \"./UpsertNode\";\nimport { Button, Checkbox } from \"./form\";\nimport BottomSheet from \"./BottomSheet\";\nimport sortBy from \"lodash/sortBy\";\n\nimport \"./map.scss\";\n\nconst mapboxgl = window.mapboxgl;\n\ntype State = {\n  openedNode: null | OpenStreetMapNode;\n  upsertNode: null | UpsertNode;\n  isMenuOpen: boolean;\n  around: number;\n  filters: {\n    [k in Amenity]: boolean;\n  };\n  showRadius: boolean;\n  continousSearch: boolean;\n  showSearchThisAreaButton: boolean;\n};\n\nclass MapFountains extends React.PureComponent<{}, State> {\n  state: State = {\n    openedNode: null,\n    upsertNode: null,\n    isMenuOpen: false,\n    around: 0,\n    showRadius: false,\n    filters: {\n      drinking_water: true,\n      toilets: true,\n      shower: true,\n      bicycle_repair_station: true,\n      public_bath: true\n    },\n    continousSearch: false,\n    showSearchThisAreaButton: false\n  };\n\n  map: Option<mapboxgl.Map> = none;\n\n  circleRadius: any | null = null;\n\n  nodes: {\n    [id: string]: {\n      node: OpenStreetMapNode;\n      marker: mapboxgl.Marker;\n    };\n  } = {};\n\n  loadingBarRef = React.createRef<LoadingBarRef>();\n\n  previousCenter: { lng: number; lat: number } = { lng: 0, lat: 0 };\n\n  getMap(cb: (map: mapboxgl.Map) => void) {\n    map<mapboxgl.Map, void>(cb)(this.map);\n  }\n\n  updateCachedAmenities = () => {\n    this.getMap(map => {\n      const center = map.getCenter();\n\n      localforage.getItem<OpenStreetMapNode[]>(\"amenities\").then(items => {\n        if (items) {\n          const nodesInRadius = items.filter(node => {\n            const distanceInMeters = distance(\n              [center.lng, center.lat],\n              [node.lon, node.lat],\n              {\n                units: \"meters\"\n              }\n            );\n\n            return distanceInMeters < this.state.around;\n          });\n\n          // add cached nodes contained in the circle radius\n          this.addAmenitiesMarkers(nodesInRadius);\n        }\n      });\n    });\n  };\n\n  updateAmenities = () => {\n    this.getMap(map => {\n      this.updateCachedAmenities();\n\n      if (this.loadingBarRef.current) {\n        // @ts-ignore (continuousStart args are optional)\n        this.loadingBarRef.current.continuousStart();\n      }\n\n      getOpenStreetMapAmenities({\n        around: this.state.around,\n        lat: map.getCenter().lat,\n        lng: map.getCenter().lng\n      })\n        .then(this.addAmenitiesMarkers)\n        .finally(() => {\n          if (this.loadingBarRef.current) {\n            this.loadingBarRef.current.complete();\n          }\n        });\n    });\n  };\n\n  updateAmenitiesDebounce = debounce(() => {\n    this.getMap(map => {\n      if (this.previousCenter.lat === 0 && this.previousCenter.lng === 0) {\n        this.previousCenter = map.getCenter();\n        return;\n      }\n\n      const distanceInMeters = distance(\n        [map.getCenter().lat, map.getCenter().lng],\n        [this.previousCenter.lat, this.previousCenter.lng],\n        {\n          units: \"meters\"\n        }\n      );\n\n      if (distanceInMeters > this.state.around / 2) {\n        if (this.state.continousSearch) {\n          this.previousCenter = map.getCenter();\n          this.updateAmenities();\n        } else {\n          this.setState({ showSearchThisAreaButton: true });\n        }\n      } else {\n        this.setState({ showSearchThisAreaButton: false });\n      }\n    });\n  }, 1000);\n\n  initializeMap() {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoiZnJhbmNlc2NvY2lvcmlhIiwiYSI6ImNqcThyejR6ODA2ZDk0M25rZzZjcGo4ZmcifQ.yRWHQbG1dJjDp43d01bBOw\";\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(e => {\n        const map = new mapboxgl.Map({\n          container: \"map\",\n          style:\n            \"mapbox://styles/francescocioria/cjqi3u6lmame92rmw6aw3uyhm?optimize=true\",\n          center: {\n            lat: e.coords.latitude,\n            lng: e.coords.longitude\n          },\n          zoom: 15.0,\n          scrollZoom:\n            /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n              navigator.userAgent\n            )\n              ? false\n              : true\n        });\n\n        map.addControl(\n          new mapboxgl.GeolocateControl({\n            positionOptions: {\n              enableHighAccuracy: true\n            },\n            trackUserLocation: true\n          }),\n          \"bottom-right\"\n        );\n\n        map.addControl(\n          new mapboxgl.NavigationControl({\n            showZoom: false,\n            showCompass: true\n          }),\n          \"bottom-right\"\n        );\n\n        map.addControl(new mapboxgl.ScaleControl());\n\n        map.on(\"load\", () => {\n          this.map = some(map);\n\n          this.updateAmenities();\n\n          (\n            document.querySelector(\".mapboxgl-ctrl-geolocate\") as HTMLElement\n          )?.click();\n        });\n\n        map.on(\"move\", () => {\n          this.updateAmenitiesDebounce();\n\n          requestAnimationFrame(() => {\n            if (this.state.showRadius) {\n              this.showRadius();\n            }\n          });\n        });\n      });\n    }\n  }\n\n  addAmenitiesMarkers = (nodes: OpenStreetMapNode[]) => {\n    this.getMap(map => {\n      const amenitiesMapOrder: { [k in Amenity]: number } = {\n        drinking_water: 1,\n        shower: 2,\n        toilets: 3,\n        public_bath: 4,\n        bicycle_repair_station: 5\n      };\n\n      sortBy(nodes, a => amenitiesMapOrder[a.tags.amenity]).forEach(node => {\n        if (!this.nodes[node.id]) {\n          const element = document.createElement(\"div\");\n\n          ReactDOM.render(\n            <div\n              onClick={() => {\n                this.setState({ openedNode: node });\n              }}\n            >\n              {getAmenityMarker(node.tags, 20)}\n            </div>,\n            element\n          );\n\n          const marker: mapboxgl.Marker = new mapboxgl.Marker({\n            element\n          }).setLngLat([node.lon, node.lat]);\n\n          if (this.state.filters[node.tags.amenity]) {\n            marker.addTo(map);\n          }\n\n          this.nodes[node.id] = {\n            node,\n            marker\n          };\n        }\n      });\n    });\n  };\n\n  showRadius() {\n    this.getMap(map => {\n      const center = {\n        lat: map.getCenter().lat,\n        lng: map.getCenter().lng\n      };\n\n      if (this.circleRadius) {\n        this.circleRadius.setCenter(center);\n\n        this.circleRadius.setRadius(this.state.around);\n      } else {\n        this.circleRadius = new MapboxCircle(center, this.state.around, {\n          editable: false,\n          minRadius: 0,\n          fillColor: \"transparent\"\n        }).addTo(map);\n      }\n    });\n  }\n\n  hideRadius() {\n    this.circleRadius.remove();\n    this.circleRadius = null;\n  }\n\n  componentDidMount() {\n    // initialize \"around\" radius\n    localforage\n      .getItem<number>(\"around\")\n      .then(around => this.setState({ around: around || 1000 }));\n\n    // initialize \"showRadius\" option\n    localforage.getItem<boolean>(\"showRadius\").then(showRadius => {\n      this.setState({ showRadius: showRadius === null ? true : showRadius });\n\n      if (showRadius) {\n        this.showRadius();\n      }\n    });\n\n    // initialize \"continousSearch\" option\n    localforage\n      .getItem<boolean>(\"continousSearch\")\n      .then(continousSearch =>\n        this.setState({ continousSearch: continousSearch || false })\n      );\n\n    // initialize map\n    this.initializeMap();\n  }\n\n  componentDidUpdate() {\n    requestAnimationFrame(() => {\n      this.getMap(map => map.resize());\n    });\n  }\n\n  amenityNodes(amenity: Amenity) {\n    return Object.values(this.nodes).filter(\n      v => v.node.tags.amenity === amenity\n    );\n  }\n\n  updateFilter(amenity: Amenity, value: boolean) {\n    this.setState({\n      filters: {\n        ...this.state.filters,\n        [amenity]: value\n      }\n    });\n  }\n\n  render() {\n    const filters = amenities.map(\n      (amenity): JSX.Element => (\n        <Checkbox\n          key={amenity}\n          value={this.state.filters[amenity]}\n          label={getAmenityTitle(amenity)}\n          onChange={show => {\n            this.updateFilter(amenity, show);\n\n            this.getMap(map => {\n              if (show) {\n                this.amenityNodes(amenity).forEach(v => v.marker.addTo(map));\n              } else {\n                this.amenityNodes(amenity).forEach(v => v.marker.remove());\n              }\n            });\n          }}\n        />\n      )\n    );\n\n    return (\n      <View style={{ height: \"100%\", width: \"100%\" }} column>\n        <View>\n          <LoadingBar ref={this.loadingBarRef} color=\"lightgreen\" height={8} />\n        </View>\n\n        <View grow id=\"map\" />\n\n        {this.state.openedNode && (\n          <BottomSheet\n            node={this.state.openedNode}\n            onDismiss={() => this.setState({ openedNode: null })}\n            onEditNode={node =>\n              this.setState({\n                upsertNode: { type: \"update\", node }\n              })\n            }\n          />\n        )}\n\n        {this.state.showSearchThisAreaButton && this.state.openedNode === null && (\n          <View\n            className=\"search-this-area-button\"\n            vAlignContent=\"center\"\n            hAlignContent=\"center\"\n            onClick={() => {\n              this.getMap(map => {\n                this.previousCenter = map.getCenter();\n                this.updateAmenities();\n\n                this.setState({ showSearchThisAreaButton: false });\n              });\n            }}\n          >\n            Search this area\n          </View>\n        )}\n\n        {this.state.upsertNode && isSome(this.map) && (\n          <UpsertNodePopup\n            map={this.map.value}\n            onClose={() => {\n              this.setState({ upsertNode: null });\n            }}\n            onDone={(node: OpenStreetMapNode) => {\n              if (this.nodes[node.id]) {\n                // remove marker\n                this.nodes[node.id].marker.remove();\n\n                // delete node from cache\n                delete this.nodes[node.id];\n              }\n\n              // show updated/created node\n              this.addAmenitiesMarkers([node]);\n\n              // fire&forget\n              updateCachedItems([node]);\n\n              this.setState({ upsertNode: null });\n            }}\n            {...this.state.upsertNode}\n          />\n        )}\n\n        <View\n          className=\"menu-button\"\n          hAlignContent=\"center\"\n          vAlignContent=\"center\"\n          onClick={() => this.setState({ isMenuOpen: true })}\n        >\n          <MenuIcon />\n\n          {/* popup */}\n          <Popup\n            onClose={() => {\n              this.setState({ isMenuOpen: false });\n            }}\n            isOpen={this.state.isMenuOpen}\n          >\n            <h4>Search options</h4>\n\n            <span style={{ marginTop: 16, marginBottom: 8 }}>\n              Around radius: <b>{this.state.around} meters</b>\n            </span>\n            <input\n              value={this.state.around}\n              type=\"range\"\n              min=\"500\"\n              max=\"15000\"\n              step=\"500\"\n              onChange={e => {\n                const around = parseInt(e.currentTarget.value) || 1000;\n\n                this.setState({ around }, () => {\n                  if (this.state.showRadius) {\n                    this.showRadius();\n                  }\n                });\n\n                localforage.setItem(\"around\", around);\n              }}\n            />\n\n            <View height={24} />\n\n            <Checkbox\n              value={this.state.showRadius}\n              label=\"Show radius in map\"\n              onChange={showRadius => {\n                this.setState({ showRadius });\n                localforage.setItem(\"showRadius\", showRadius);\n\n                if (showRadius) {\n                  this.showRadius();\n                } else {\n                  this.hideRadius();\n                }\n              }}\n            />\n\n            <Checkbox\n              value={this.state.continousSearch}\n              label=\"Enable continous search\"\n              onChange={continousSearch => {\n                this.setState({\n                  continousSearch,\n                  showSearchThisAreaButton: false\n                });\n                localforage.setItem(\"continousSearch\", continousSearch);\n              }}\n            />\n\n            <View className=\"separator\" />\n\n            <h4 style={{ marginBottom: 8 }}>Filters</h4>\n            {filters}\n\n            <View className=\"separator\" />\n\n            <h4>Add new amenity (OSM account required)</h4>\n            {amenities.map((amenity, i) => (\n              <Button\n                key={amenity}\n                label={`Add ${getAmenityTitle(amenity)}`}\n                style={{ marginTop: i === 0 ? 16 : 24 }}\n                onClick={() => {\n                  this.setState({\n                    isMenuOpen: false,\n                    upsertNode: {\n                      type: \"create_without_coordinates\",\n                      node: {\n                        tags: { amenity }\n                      }\n                    }\n                  });\n                }}\n              />\n            ))}\n          </Popup>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default MapFountains;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (\"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl, { scope: \"/fontanelle/\" })\n    .then(registration => {\n      console.log(registration.scope);\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { FC, useEffect } from \"react\";\nimport * as serviceWorker from \"./serviceWorkerRegistration\";\nimport View from \"react-flexview\";\nimport { none, Option, fromNullable, map } from \"fp-ts/lib/Option\";\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nconst ServiceWorkerWrapper: FC = () => {\n  const [showReload, setShowReload] = React.useState(false);\n  const [waitingWorker, setWaitingWorker] =\n    React.useState<Option<ServiceWorker>>(none);\n\n  const onSWUpdate = (registration: ServiceWorkerRegistration) => {\n    setShowReload(true);\n    setWaitingWorker(fromNullable(registration.waiting));\n  };\n\n  useEffect(() => {\n    serviceWorker.register({ onUpdate: onSWUpdate });\n  }, []);\n\n  const reloadPage = () => {\n    console.log(\"reload page\");\n    map<ServiceWorker, void>(ww => ww.postMessage({ type: \"SKIP_WAITING\" }))(\n      waitingWorker\n    );\n    setShowReload(false);\n    window.location.reload();\n  };\n\n  return showReload ? (\n    <View\n      className=\"updateAvailable\"\n      vAlignContent=\"center\"\n      hAlignContent=\"center\"\n      style={{\n        background: \"lightgreen\",\n        height: 40,\n        color: \"black\",\n        position: \"fixed\",\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 9999999999999\n      }}\n    >\n      Update Available:\n      <span\n        style={{\n          marginLeft: 32,\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        }}\n        onClick={() => reloadPage()}\n      >\n        Install\n      </span>\n      <span\n        style={{\n          marginLeft: 32,\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        }}\n        onClick={() => {\n          console.log(\"ignore\");\n          setShowReload(false);\n        }}\n      >\n        Ignore\n      </span>\n    </View>\n  ) : null;\n};\n\nexport default ServiceWorkerWrapper;\n","import Map from \"./Map\";\nimport View from \"react-flexview\";\nimport ServiceWorkerWrapper from \"./ServiceWorkerWrapper\";\n\nfunction App() {\n  return (\n    <View className=\"App\" style={{ height: \"100vh\", width: \"100vw\" }} column>\n      <ServiceWorkerWrapper />\n      <Map />\n    </View>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}