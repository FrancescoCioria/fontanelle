{"version":3,"sources":["getOpenStreetMapAmenities.ts","DrinkingWaterMarker.tsx","PublicToiletsMarker.tsx","PublicShowerMarker.tsx","MenuIcon.tsx","Popup.tsx","UpsertNode.tsx","Map.tsx","serviceWorkerRegistration.ts","ServiceWorkerWrapper.tsx","App.tsx","index.tsx"],"names":["amenities","options","a","formData","join","around","lat","lng","fetch","res","json","localforage","cachedItems","nodes","uniqBy","elements","concat","i","id","width","height","viewBox","enableBackground","xmlSpace","fill","cx","cy","r","d","transform","rx","ry","props","style","background","color","borderRadius","points","Popup","className","display","isOpen","hAlignContent","vAlignContent","onClick","e","stopPropagation","onClose","shrink","column","children","Select","label","value","onChange","currentTarget","map","o","Input","UpsertNodePopup","React","node","updateNode","editNodeTag","tag","tags","osmApi","amenity","getTitle","access","v","fee","charge","unisex","changing_table","hot_water","wheelchair","marginTop","marginLeft","flexShrink","mode","clientId","redirectUrl","scopes","Checkbox","checked","type","mapboxgl","window","MapFountains","state","upsertNode","isMenuOpen","showRadius","showDrinkingWater","showShowers","showToilets","continousSearch","showSearchThisAreaButton","none","circleRadius","drinkingWaterNodes","drinkingWaterMarkers","publicToiletsNodes","publicToiletsMarkers","publicShowersNodes","publicShowersMarkers","loadingBarRef","previousCenter","updateAmenities","getItem","then","items","addAmenitiesMarkers","filter","distance","getCenter","lon","units","current","continuousStart","getOpenStreetMapAmenities","complete","updateAmenitiesDebounce","debounce","setState","addMarkers","cacheMap","markerElement","cachedMarkers","show","forEach","element","document","createElement","ReactDOM","marker","Marker","setLngLat","popup","offset","setHTML","Object","keys","k","mapillary","setPopup","addTo","push","PublicShowerMarker","DrinkingWaterMarker","PublicToiletsMarker","accessToken","navigator","geolocation","getCurrentPosition","Map","container","center","coords","latitude","longitude","zoom","scrollZoom","test","userAgent","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","NavigationControl","showZoom","showCompass","ScaleControl","on","some","querySelector","click","requestAnimationFrame","includes","setCenter","setRadius","MapboxCircle","editable","minRadius","fillColor","this","remove","initializeMap","editNode","nodeId","find","String","resize","ref","grow","MenuIcon","min","max","step","parseInt","setItem","hideRadius","isLocalhost","Boolean","location","hostname","match","register","config","URL","process","href","origin","addEventListener","swUrl","headers","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","scope","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ServiceWorkerWrapper","useState","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","fromNullable","waiting","useEffect","position","bottom","left","right","zIndex","textDecoration","cursor","ww","postMessage","App","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f624baf3.chunk.js","sourcesContent":["import * as localforage from \"localforage\";\nimport uniqBy from \"lodash/uniqBy\";\n\nimport \"localforage-getitems\";\n\ntype AmenityTags = { mapillary?: string } & (\n  | {\n      amenity: \"drinking_water\";\n    }\n  | {\n      amenity: \"toilets\";\n      access?: \"yes\" | \"public\" | \"permissive\" | \"unknown\";\n      changing_table?: \"yes\" | \"no\" | \"unknown\";\n      fee?: \"yes\" | \"no\" | \"unknown\";\n      charge?: string;\n      wheelchair?: \"yes\" | \"no\" | \"unknown\" | \"limited\";\n      unisex?: \"yes\" | \"male\" | \"female\";\n    }\n  | {\n      amenity: \"shower\";\n      access?: \"yes\" | \"public\" | \"permissive\" | \"unknown\";\n      hot_water?: \"yes\" | \"no\" | \"unknown\";\n      fee?: \"yes\" | \"no\" | \"unknown\";\n      charge?: string;\n      wheelchair?: \"yes\" | \"no\" | \"unknown\" | \"limited\";\n    }\n);\n\nexport type OpenStreetMapNode = {\n  id: number;\n  lat: number;\n  lon: number;\n  tags: AmenityTags;\n};\n\nconst amenities = [\"drinking_water\", \"toilets\", \"shower\"] as const;\n\nexport type Amenity = typeof amenities[number];\n\nexport type Options = {\n  around: number;\n  lat: number;\n  lng: number;\n};\n\nexport default async (options: Options): Promise<OpenStreetMapNode[]> => {\n  const formData = `\n    [out:json];\n    (node[\"amenity\"~\"${amenities.join(\"|\")}\"](around:${options.around},${\n    options.lat\n  },${options.lng}););\n    out;>;out;\n  `;\n\n  // const OverpassApiService = 'https://overpass-api.de/api/interpreter'\n  const OverpassApiService = \"https://overpass.kumi.systems/api/interpreter\";\n\n  const res = await fetch(`${OverpassApiService}?data=${formData}&output`);\n\n  const json: { elements: OpenStreetMapNode[] } = await res.json();\n\n  const cachedItems =\n    (await localforage.getItem<OpenStreetMapNode[]>(\"amenities\")) || [];\n\n  const nodes = uniqBy(json.elements.concat(cachedItems), i => i.id);\n\n  // fire&forget\n  localforage.setItem(\"amenities\", nodes);\n\n  return json.elements;\n};\n","import * as React from \"react\";\n\nexport default () => (\n  <svg\n    width=\"20px\"\n    height=\"20px\"\n    viewBox=\"0 0 508 508\"\n    enableBackground=\"new 0 0 508 508\"\n    xmlSpace=\"preserve\"\n  >\n    <circle fill=\"#324A5E\" cx=\"254\" cy=\"254\" r=\"254\" />\n    <path\n      fill=\"#54C0EB\"\n      d=\"M252,414h4c62.8,0,115.2-50.4,114-113.2c0-8-1.2-15.6-2.8-22.8C360,246.4,324,210,298,170.8  c-27.2-37.6-44-77.6-44-76.4c-0.4-0.8-17.2,39.2-44,76.4c-25.6,39.2-62,76-69.2,106.8c-2,7.2-2.8,14.8-2.8,22.8  C136.8,363.2,189.2,414,252,414z\"\n    />\n    <g>\n      <path\n        fill=\"#84DBFF\"\n        d=\"M177.2,353.6c6-0.4,9.6-6,7.2-10.8c-3.2-7.2-6-14.8-7.2-22.8c-1.6-8-2-15.6-1.6-23.2   c1.2-32,32-75.2,51.6-118.4c2-3.6,3.6-7.6,5.2-11.2c-0.8,1.2-1.6,2.4-2.4,3.2c-26.4,40.4-64,78.8-70.8,110   c-1.6,7.2-2.4,15.2-2.4,23.2c0.4,16.8,4.8,32,12.4,46C171.2,352.4,174,354,177.2,353.6L177.2,353.6z\"\n      />\n\n      <ellipse\n        transform=\"matrix(-0.042 -0.9991 0.9991 -0.042 -169.3631 569.6013)\"\n        fill=\"#84DBFF\"\n        cx=\"188.401\"\n        cy=\"365.998\"\n        rx=\"8.4\"\n        ry=\"9.2\"\n      />\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\n\nexport default (props: { color?: string }) => (\n  <svg\n    width=\"20px\"\n    height=\"20px\"\n    viewBox=\"0 0 395 395\"\n    xmlSpace=\"preserve\"\n    fill=\"black\"\n    style={{ background: props.color || \"white\", borderRadius: 3 }}\n  >\n    <g>\n      <path d=\"M229.412,130.862c-2.405-3.355-6.284-5.346-10.412-5.346h-1.266c-5.524,0-10.424,3.539-12.161,8.782l-27.534,83.09   l-27.662-83.107c-1.743-5.233-6.639-8.765-12.156-8.765h-0.822c-0.051,0-0.104,0.003-0.153,0.003c-0.053,0-0.105-0.003-0.155-0.003   h-0.998c-5.524,0-10.425,3.539-12.163,8.782l-27.533,83.09l-27.661-83.107c-1.742-5.233-6.64-8.765-12.156-8.765h-1.268   c-4.13,0-8.007,1.991-10.414,5.346c-2.407,3.357-3.045,7.669-1.72,11.579l40.125,118.344c1.763,5.201,6.643,8.698,12.135,8.698   h0.53c0.153,0,0.303-0.008,0.455-0.014c0.151,0.006,0.302,0.014,0.454,0.014h0.354c5.5,0,10.386-3.511,12.142-8.721l27.845-82.675   l27.718,82.657c1.751,5.221,6.642,8.739,12.148,8.739h0.527c0.153,0,0.303-0.008,0.456-0.014c0.15,0.006,0.302,0.014,0.454,0.014   h0.355c5.491,0,10.37-3.497,12.134-8.698l40.125-118.344C232.459,138.531,231.818,134.22,229.412,130.862z\" />\n      <path d=\"M347.88,232.295c-4.756-4.416-12.063-4.578-17.01-0.378c-8.521,7.234-19.511,11.218-30.943,11.218   c-26.069,0-47.277-20.51-47.277-45.721c0-25.116,21.208-45.548,47.277-45.548c11.542,0,22.522,3.916,30.921,11.027   c5.087,4.306,12.625,3.995,17.339-0.719l0.427-0.427c2.544-2.542,3.899-6.036,3.74-9.628c-0.161-3.592-1.822-6.952-4.58-9.258   c-13.371-11.184-30.366-17.344-47.848-17.344c-40.598,0-73.628,32.253-73.628,71.898c0,39.739,33.03,72.07,73.628,72.07   c17.454,0,34.493-6.207,47.979-17.48c2.822-2.36,4.495-5.817,4.589-9.494c0.098-3.678-1.393-7.22-4.087-9.723L347.88,232.295z\" />\n      <path d=\"M313.001,0H81.999C36.785,0,0,36.784,0,81.998v230.993C0,358.211,36.785,395,81.999,395h231.002   C358.216,395,395,358.211,395,312.991V81.998C395,36.784,358.216,0,313.001,0z M380,312.991C380,349.94,349.945,380,313.001,380   H81.999C45.056,380,15,349.94,15,312.991V81.998C15,45.055,45.056,15,81.999,15h231.002C349.945,15,380,45.055,380,81.998V312.991z   \" />\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\n\nexport default (props: { color: string }) => (\n  <svg\n    enableBackground=\"new -0.258 -0.548 123.547 123.539\"\n    xmlSpace=\"preserve\"\n    viewBox=\"-0.258 -0.548 123.547 123.539\"\n    width=\"20px\"\n    height=\"20px\"\n  >\n    <g>\n      <path\n        fill=\"#231F20\"\n        d=\"m109.63 123.6c8.148 0 14.766-6.586 14.766-14.742v-94.02c0-8.156-6.617-14.773-14.766-14.773h-94.013c-8.156 0-14.758 6.617-14.758 14.773v94.016c0 8.156 6.602 14.742 14.758 14.742h94.013z\"\n      />\n      <path\n        fill={props.color}\n        d=\"m15.617 2.559c-6.758 0-12.258 5.516-12.258 12.281v94.016c0 6.734 5.5 12.234 12.258 12.234h94.016c6.758 0 12.25-5.5 12.25-12.234v-94.02c0-6.766-5.492-12.281-12.25-12.281h-94.013z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m68.344 66.402c6.789 0 12.281-5.5 12.281-12.281 0-6.789-5.492-12.281-12.281-12.281s-12.297 5.492-12.297 12.281c0 6.781 5.508 12.281 12.297 12.281z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m56.766 96.254c0 1.32 1.062 3.055 2.398 3.055v-0.023h5.664v0.023c1.344 0 3.055-1.711 3.055-3.031v-10.446c0-1.32-1.711-3-3.055-3h-5.664c-1.25 0-2.266 1.586-2.398 2.781 8.164 0 8.109 10.641 0 10.641zm-5.149-25.922c1.312-1.273 3.102-2.031 5.055-2.031h24.219l24.367-24.438c5.227-5.25 12.062 1.562 6.836 6.812l-26.741 26.805 0.023 36.602h-32.062v-17.771h-14.484c-3.016 0-5.469-2.445-5.469-5.469 0-1.297 0.438-2.469 1.18-3.422l17.07-17.086z\"\n      />\n      <polygon\n        fill=\"#231F20\"\n        points=\"12.883 22.621 15.859 25.605 30.242 10.902 27.266 7.926 20.742 10.395 17.75 7.418 11.75 13.395 14.727 16.402\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m35.023 69.324c-0.281 1.812 0.969 3.445 2.734 3.688 1.781 0.297 3.469-1 3.688-2.734 0.273-1.805-0.953-3.438-2.742-3.688-1.773-0.266-3.445 0.953-3.68 2.734z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m37.844 61.902c0.242-1.703-0.914-3.266-2.609-3.516-1.695-0.242-3.258 0.93-3.508 2.617-0.242 1.734 0.93 3.242 2.617 3.492 1.679 0.267 3.273-0.929 3.5-2.593z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m34.242 53.535c0.219-1.617-0.867-3.102-2.477-3.352-1.609-0.219-3.086 0.883-3.32 2.492-0.234 1.641 0.867 3.078 2.469 3.32 1.609 0.275 3.109-0.897 3.328-2.46z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m30.641 45.16c0.219-1.516-0.812-2.93-2.344-3.148-1.539-0.219-2.93 0.828-3.148 2.344-0.219 1.531 0.828 2.906 2.344 3.148s2.945-0.859 3.148-2.344z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m27.039 36.785c0.211-1.445-0.781-2.781-2.203-2.977-1.453-0.195-2.766 0.781-2.969 2.219-0.211 1.469 0.766 2.734 2.195 2.977 1.446 0.219 2.782-0.805 2.977-2.219z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m18.57 27.699c-0.211 1.367 0.734 2.562 2.078 2.789 1.344 0.219 2.594-0.758 2.789-2.078 0.195-1.344-0.727-2.609-2.07-2.781-1.383-0.195-2.617 0.726-2.797 2.07z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m47.148 57.512c0.086-1.758 1.602-3.148 3.367-3.055 1.781 0.102 3.141 1.586 3.055 3.398-0.062 1.781-1.586 3.125-3.375 3.023-1.765-0.046-3.148-1.562-3.047-3.366z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m45.117 54.02c-1.68-0.07-3-1.492-2.898-3.219 0.086-1.688 1.523-2.984 3.211-2.906 1.695 0.094 2.977 1.508 2.898 3.219-0.07 1.71-1.508 2.976-3.211 2.906z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m40.055 47.137c-1.602-0.078-2.844-1.414-2.758-3.031 0.086-1.609 1.438-2.852 3.055-2.758 1.594 0.078 2.828 1.445 2.758 3.055-0.063 1.585-1.446 2.827-3.055 2.734z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m34.977 40.277c-1.516-0.078-2.695-1.344-2.609-2.883 0.086-1.516 1.367-2.688 2.891-2.609 1.516 0.07 2.688 1.367 2.609 2.875-0.056 1.516-1.368 2.711-2.891 2.617z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m29.914 33.418c-1.43-0.078-2.555-1.297-2.469-2.734 0.07-1.422 1.281-2.516 2.719-2.469 1.43 0.07 2.539 1.297 2.469 2.734-0.063 1.414-1.297 2.539-2.719 2.469z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m22.516 23.988c0.07-1.336 1.203-2.391 2.562-2.32 1.344 0.055 2.391 1.203 2.32 2.547-0.062 1.336-1.227 2.414-2.562 2.312-1.344-0.07-2.398-1.195-2.32-2.539z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m55.945 43.691c-1.781 0.102-3.328-1.266-3.391-3.047-0.094-1.812 1.305-3.32 3.086-3.398 1.75-0.07 3.281 1.273 3.352 3.102 0.102 1.734-1.258 3.273-3.047 3.343z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m52.078 35.27c0.086 1.633-1.18 3.055-2.859 3.125-1.672 0.07-3.109-1.195-3.18-2.852-0.078-1.688 1.219-3.078 2.891-3.18 1.648-0.07 3.062 1.196 3.148 2.907z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m45.172 30.191c0.07 1.539-1.125 2.859-2.688 2.93-1.562 0.078-2.914-1.125-2.977-2.656-0.078-1.594 1.148-2.906 2.711-2.984 1.532-0.071 2.868 1.124 2.954 2.71z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m38.258 25.113c0.062 1.445-1.047 2.688-2.5 2.734-1.453 0.07-2.711-1.047-2.773-2.492-0.055-1.461 1.078-2.68 2.531-2.758 1.429-0.07 2.672 1.055 2.742 2.516z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m26.469 20.277c-0.07-1.367 0.992-2.516 2.328-2.562 1.336-0.07 2.492 0.977 2.555 2.32s-0.977 2.492-2.32 2.539c-1.344 0.078-2.516-0.976-2.563-2.297z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m32.508 13.762c1.336-0.195 2.602 0.734 2.797 2.078s-0.734 2.609-2.086 2.781c-1.344 0.219-2.602-0.734-2.797-2.078-0.18-1.344 0.758-2.586 2.086-2.781z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m44.117 19.426c0.211 1.414-0.781 2.734-2.195 2.93-1.414 0.219-2.742-0.781-2.938-2.172-0.195-1.414 0.789-2.758 2.195-2.953 1.399-0.196 2.735 0.781 2.938 2.195z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m52.93 22.988c0.227 1.516-0.812 2.883-2.305 3.102-1.484 0.219-2.891-0.828-3.102-2.297-0.203-1.484 0.836-2.875 2.312-3.094 1.477-0.226 2.876 0.805 3.095 2.289z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m61.727 26.582c0.25 1.562-0.852 3-2.414 3.242-1.547 0.219-3.023-0.852-3.227-2.414-0.227-1.562 0.852-3.031 2.398-3.25 1.563-0.242 3.024 0.86 3.243 2.422z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m70.539 30.168c0.25 1.633-0.898 3.148-2.516 3.391-1.633 0.25-3.172-0.898-3.391-2.516-0.219-1.633 0.906-3.172 2.516-3.414 1.633-0.219 3.149 0.906 3.391 2.539z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m79.352 33.754c0.273 1.711-0.922 3.297-2.633 3.539-1.688 0.25-3.297-0.945-3.539-2.633-0.242-1.711 0.93-3.32 2.633-3.562 1.71-0.243 3.296 0.953 3.539 2.656z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m84.484 34.559c1.781-0.242 3.438 1.008 3.688 2.789 0.266 1.758-0.977 3.414-2.734 3.688-1.789 0.266-3.469-0.977-3.688-2.758-0.273-1.79 0.953-3.446 2.734-3.719z\"\n      />\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\n\nexport default () => (\n  <svg fill=\"#000000\" viewBox=\"0 0 30 30\" width=\"20px\" height=\"20px\">\n    <path d=\"M 3 7 A 1.0001 1.0001 0 1 0 3 9 L 27 9 A 1.0001 1.0001 0 1 0 27 7 L 3 7 z M 3 14 A 1.0001 1.0001 0 1 0 3 16 L 27 16 A 1.0001 1.0001 0 1 0 27 14 L 3 14 z M 3 21 A 1.0001 1.0001 0 1 0 3 23 L 27 23 A 1.0001 1.0001 0 1 0 27 21 L 3 21 z\" />\n  </svg>\n);\n","import * as React from \"react\";\nimport View from \"react-flexview\";\n\nexport const Popup = (props: {\n  children: JSX.Element | false | null | Array<JSX.Element | false | null>;\n  onClose: () => void;\n  isOpen: boolean;\n}) => {\n  return (\n    <View\n      className=\"popup\"\n      style={{\n        display: props.isOpen ? \"flex\" : \"none\"\n      }}\n      hAlignContent=\"center\"\n      vAlignContent=\"center\"\n      onClick={e => {\n        e.stopPropagation();\n        props.onClose();\n      }}\n      shrink={false}\n    >\n      <View\n        className=\"popup-content\"\n        column\n        onClick={e => {\n          e.stopPropagation();\n        }}\n      >\n        {props.children}\n      </View>\n    </View>\n  );\n};\n","import * as React from \"react\";\nimport View from \"react-flexview\";\nimport * as osmApi from \"osm-api\";\nimport { Popup } from \"./Popup\";\nimport { OpenStreetMapNode } from \"./getOpenStreetMapAmenities\";\n\ntype Option<V extends string> = {\n  value: V;\n  label: string;\n};\n\nconst Select = <V extends string>(props: {\n  value?: V;\n  label: string;\n  onChange: (value: V) => void;\n  options: Option<V>[];\n}) => {\n  return (\n    <View column className=\"select\" shrink={false}>\n      <span className=\"select-label\">{props.label}</span>\n      <select\n        value={props.value}\n        onChange={e => props.onChange(e.currentTarget.value as V)}\n      >\n        {props.options.map(o => (\n          <option key={o.value} value={o.value}>\n            {o.label}\n          </option>\n        ))}\n      </select>\n    </View>\n  );\n};\n\nconst Input = (props: {\n  value?: string;\n  label: string;\n  onChange: (value: string) => void;\n}) => {\n  return (\n    <View column className=\"input\" shrink={false}>\n      <span className=\"input-label\">{props.label}</span>\n      <input\n        value={props.value}\n        onChange={e => props.onChange(e.currentTarget.value)}\n      />\n    </View>\n  );\n};\n\nexport const UpsertNodePopup = (props: {\n  node: Omit<OpenStreetMapNode, \"id\"> & { id: string | null };\n  onClose: () => void;\n}) => {\n  const [node, updateNode] = React.useState({ ...props.node });\n\n  const editNodeTag = (tag: string, value: string) => {\n    updateNode({\n      ...node,\n      tags: {\n        ...node.tags,\n        [tag]: value\n      }\n    });\n  };\n\n  const getForm = () => {\n    return (\n      <View column shrink={false}>\n        {(node.tags.amenity === \"toilets\" ||\n          node.tags.amenity === \"shower\") && (\n          <Select\n            value={node.tags.access}\n            label=\"Access\"\n            onChange={v => editNodeTag(\"access\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"public\", label: \"Public\" },\n              { value: \"permissive\", label: \"Permissive\" }\n            ]}\n          />\n        )}\n\n        {(node.tags.amenity === \"toilets\" ||\n          node.tags.amenity === \"shower\") && (\n          <Select\n            value={node.tags.fee}\n            label=\"Fee\"\n            onChange={v => editNodeTag(\"fee\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"no\", label: \"No\" }\n            ]}\n          />\n        )}\n\n        {(node.tags.amenity === \"toilets\" || node.tags.amenity === \"shower\") &&\n        node.tags.fee === \"yes\" ? (\n          <Input\n            value={node.tags.charge}\n            label=\"Fee Amount\"\n            onChange={v => editNodeTag(\"charge\", v)}\n          />\n        ) : (\n          <div />\n        )}\n\n        {node.tags.amenity === \"toilets\" && (\n          <Select\n            value={node.tags.unisex}\n            label=\"Gender\"\n            onChange={v => editNodeTag(\"unisex\", v)}\n            options={[\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"male\", label: \"Male\" },\n              { value: \"female\", label: \"Female\" }\n            ]}\n          />\n        )}\n\n        {node.tags.amenity === \"toilets\" && (\n          <Select\n            value={node.tags.changing_table}\n            label=\"Changing Table\"\n            onChange={v => editNodeTag(\"changing_table\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"no\", label: \"No\" }\n            ]}\n          />\n        )}\n\n        {node.tags.amenity === \"shower\" && (\n          <Select\n            value={node.tags.hot_water}\n            label=\"Hot Water\"\n            onChange={v => editNodeTag(\"hot_water\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"no\", label: \"No\" }\n            ]}\n          />\n        )}\n\n        {(node.tags.amenity === \"toilets\" ||\n          node.tags.amenity === \"shower\") && (\n          <Select\n            value={node.tags.wheelchair}\n            label=\"Wheelchair\"\n            onChange={v => editNodeTag(\"wheelchair\", v)}\n            options={[\n              { value: \"unknown\", label: \"Unknown\" },\n              { value: \"yes\", label: \"Yes\" },\n              { value: \"no\", label: \"No\" },\n              { value: \"limited\", label: \"Limited\" }\n            ]}\n          />\n        )}\n      </View>\n    );\n  };\n\n  const getTitle = (): string => {\n    switch (props.node.tags.amenity) {\n      case \"drinking_water\":\n        return \"Drinking Water\";\n      case \"toilets\":\n        return \"Toilets\";\n      case \"shower\":\n        return \"Shower\";\n    }\n  };\n\n  if (osmApi.isLoggedIn()) {\n    return (\n      <Popup onClose={props.onClose} isOpen={true}>\n        <h2>{getTitle()}</h2>\n\n        {getForm()}\n\n        <button\n          style={{\n            marginTop: 48,\n            height: 40,\n            width: 200,\n            marginLeft: \"auto\",\n            flexShrink: 0\n          }}\n        >\n          Save on OSM\n        </button>\n      </Popup>\n    );\n  } else {\n    return (\n      <Popup onClose={props.onClose} isOpen={true}>\n        <h2>\n          You need to be logged into Open Street Maps to add and edit nodes\n        </h2>\n\n        <button\n          style={{\n            marginTop: 48,\n            height: 40,\n            width: 200,\n            marginLeft: \"auto\",\n            flexShrink: 0\n          }}\n          onClick={() => {\n            osmApi.login({\n              mode: \"popup\",\n              clientId: \"UzKLAo2Jaaq3uuekbiMxIBX4NQQk5NrVwqMtKZZT7tA\",\n              redirectUrl: \"https://francescocioria.github.io/fontanelle/\",\n              scopes: [\"write_api\"]\n            });\n          }}\n        >\n          Log in OSM\n        </button>\n      </Popup>\n    );\n  }\n};\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport debounce from \"lodash/debounce\";\nimport View from \"react-flexview\";\nimport { Option, none, some, map } from \"fp-ts/lib/Option\";\nimport getOpenStreetMapAmenities, {\n  OpenStreetMapNode\n} from \"./getOpenStreetMapAmenities\";\nimport DrinkingWaterMarker from \"./DrinkingWaterMarker\";\nimport PublicToiletsMarker from \"./PublicToiletsMarker\";\nimport PublicShowerMarker from \"./PublicShowerMarker\";\nimport distance from \"@turf/distance\";\nimport localforage from \"localforage\";\nimport MenuIcon from \"./MenuIcon\";\nimport * as MapboxCircle from \"mapbox-gl-circle\";\nimport LoadingBar, { LoadingBarRef } from \"react-top-loading-bar\";\nimport { Popup } from \"./Popup\";\nimport { UpsertNodePopup } from \"./UpsertNode\";\n\nimport \"./map.scss\";\n\nconst Checkbox = (props: {\n  label: string;\n  value: boolean;\n  onChange: (value: boolean) => void;\n}) => (\n  <View\n    className=\"checkbox\"\n    vAlignContent=\"center\"\n    onClick={() => props.onChange(!props.value)}\n  >\n    <input\n      checked={props.value}\n      type=\"checkbox\"\n      onChange={e => {\n        props.onChange(e.currentTarget.checked);\n      }}\n    />\n    <span className=\"checkbox-label\">{props.label}</span>\n  </View>\n);\n\nconst mapboxgl = window.mapboxgl;\n\ntype State = {\n  upsertNode: null | (Omit<OpenStreetMapNode, \"id\"> & { id: string | null });\n  isMenuOpen: boolean;\n  around: number;\n  showRadius: boolean;\n  showDrinkingWater: boolean;\n  showToilets: boolean;\n  showShowers: boolean;\n  continousSearch: boolean;\n  showSearchThisAreaButton: boolean;\n};\n\nclass MapFountains extends React.PureComponent<{}, State> {\n  state: State = {\n    upsertNode: null,\n    isMenuOpen: false,\n    around: 0,\n    showRadius: false,\n    showDrinkingWater: true,\n    showShowers: true,\n    showToilets: true,\n    continousSearch: false,\n    showSearchThisAreaButton: false\n  };\n\n  map: Option<mapboxgl.Map> = none;\n\n  circleRadius: any | null = null;\n\n  drinkingWaterNodes: {\n    [id: string]: OpenStreetMapNode;\n  } = {};\n\n  drinkingWaterMarkers: mapboxgl.Marker[] = [];\n\n  publicToiletsNodes: {\n    [id: string]: OpenStreetMapNode;\n  } = {};\n\n  publicToiletsMarkers: mapboxgl.Marker[] = [];\n\n  publicShowersNodes: {\n    [id: string]: OpenStreetMapNode;\n  } = {};\n\n  publicShowersMarkers: mapboxgl.Marker[] = [];\n\n  loadingBarRef = React.createRef<LoadingBarRef>();\n\n  previousCenter: { lng: number; lat: number } = { lng: 0, lat: 0 };\n\n  updateAmenities = () => {\n    map<mapboxgl.Map, void>(map => {\n      localforage.getItem<OpenStreetMapNode[]>(\"amenities\").then(items => {\n        if (items) {\n          this.addAmenitiesMarkers(\n            // add cached nodes contained in the circle radius\n            items.filter(node => {\n              const distanceInMeters = distance(\n                [map.getCenter().lat, map.getCenter().lng],\n                [node.lat, node.lon],\n                {\n                  units: \"meters\"\n                }\n              );\n\n              return distanceInMeters < this.state.around;\n            })\n          );\n        }\n      });\n\n      if (this.loadingBarRef.current) {\n        // @ts-ignore (continuousStart args are optional)\n        this.loadingBarRef.current.continuousStart();\n      }\n\n      getOpenStreetMapAmenities({\n        around: this.state.around,\n        lat: map.getCenter().lat,\n        lng: map.getCenter().lng\n      })\n        .then(this.addAmenitiesMarkers)\n        .then(() => {\n          if (this.loadingBarRef.current) {\n            this.loadingBarRef.current.complete();\n          }\n        });\n    })(this.map);\n  };\n\n  updateAmenitiesDebounce = debounce(() => {\n    map<mapboxgl.Map, void>(map => {\n      if (this.previousCenter.lat === 0 && this.previousCenter.lng === 0) {\n        this.previousCenter = map.getCenter();\n        return;\n      }\n\n      const distanceInMeters = distance(\n        [map.getCenter().lat, map.getCenter().lng],\n        [this.previousCenter.lat, this.previousCenter.lng],\n        {\n          units: \"meters\"\n        }\n      );\n\n      if (distanceInMeters > this.state.around / 2) {\n        if (this.state.continousSearch) {\n          this.previousCenter = map.getCenter();\n          this.updateAmenities();\n        } else {\n          this.setState({ showSearchThisAreaButton: true });\n        }\n      } else {\n        this.setState({ showSearchThisAreaButton: false });\n      }\n    })(this.map);\n  }, 1000);\n\n  initializeMap() {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoiZnJhbmNlc2NvY2lvcmlhIiwiYSI6ImNqcThyejR6ODA2ZDk0M25rZzZjcGo4ZmcifQ.yRWHQbG1dJjDp43d01bBOw\";\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(e => {\n        const map = new mapboxgl.Map({\n          container: \"map\",\n          style:\n            \"mapbox://styles/francescocioria/cjqi3u6lmame92rmw6aw3uyhm?optimize=true\",\n          center: {\n            lat: e.coords.latitude,\n            lng: e.coords.longitude\n          },\n          zoom: 15.0,\n          scrollZoom:\n            /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n              navigator.userAgent\n            )\n              ? false\n              : true\n        });\n\n        map.addControl(\n          new mapboxgl.GeolocateControl({\n            positionOptions: {\n              enableHighAccuracy: true\n            },\n            trackUserLocation: true\n          }),\n          \"bottom-right\"\n        );\n\n        map.addControl(\n          new mapboxgl.NavigationControl({\n            showZoom: false,\n            showCompass: true\n          }),\n          \"bottom-right\"\n        );\n\n        map.addControl(new mapboxgl.ScaleControl());\n\n        map.on(\"load\", () => {\n          this.map = some(map);\n\n          this.updateAmenities();\n\n          (\n            document.querySelector(\".mapboxgl-ctrl-geolocate\") as HTMLElement\n          )?.click();\n        });\n\n        map.on(\"move\", () => {\n          this.updateAmenitiesDebounce();\n\n          requestAnimationFrame(() => {\n            if (this.state.showRadius) {\n              this.showRadius();\n            }\n          });\n        });\n      });\n    }\n  }\n\n  addMarkers = (\n    nodes: OpenStreetMapNode[],\n    cacheMap: { [k: string]: OpenStreetMapNode },\n    markerElement: (node: OpenStreetMapNode) => JSX.Element,\n    cachedMarkers: mapboxgl.Marker[],\n    show: boolean\n  ) => {\n    map<mapboxgl.Map, void>(map => {\n      nodes.forEach(node => {\n        if (!cacheMap[node.id]) {\n          const element = document.createElement(\"div\");\n          ReactDOM.render(markerElement(node), element);\n\n          const marker: mapboxgl.Marker = new mapboxgl.Marker({\n            element\n          }).setLngLat([node.lon, node.lat]);\n\n          const popup = new mapboxgl.Popup({ offset: 25 }).setHTML(\n            `<div style=\"overflow-wrap: break-word;\">\n                ${Object.keys(node.tags)\n                  .map(k => `<b>${k}:</b> ${node.tags[k as never]}`)\n                  .join(\"<br />\")}\n\n                ${\n                  node.tags.mapillary\n                    ? `<button style=\"margin-top: 16px;\">\n                        <a href=\"${node.tags.mapillary}\" target=\"_blank\" rel=\"noopener noreferrer\">\n                          See street view\n                        </a>\n                      </button>`\n                    : \"\"\n                }\n\n                <div>\n                  <button style=\"margin-top: 16px;\">\n                    <a href=\"https://www.google.com/maps/dir//${node.lat},${\n              node.lon\n            }\" target=\"_blank\" rel=\"noopener noreferrer\">\n                      Directions\n                    </a>\n                  </button>\n                </div>\n\n                <div>\n                  <button style=\"margin-top: 16px;\" onclick=\"editNode('${\n                    node.id\n                  }')\">\n                    Edit node\n                  </button>\n                </div>\n              </div>\n              `\n\n            // <a href=\"https://www.openstreetmap.org/edit?node=${\n            // node.id\n            // }\" target=\"_blank\" rel=\"noopener noreferrer\">\n            // Edit node\n            // </a>\n          );\n\n          marker.setPopup(popup);\n\n          if (show) {\n            marker.addTo(map);\n          }\n\n          cacheMap[node.id] = node;\n\n          cachedMarkers.push(marker);\n        }\n      });\n    })(this.map);\n  };\n\n  color(tags: OpenStreetMapNode[\"tags\"]): string {\n    if (\n      \"access\" in tags &&\n      tags.access &&\n      ![\"yes\", \"public\", \"unknown\", \"permissive\"].includes(tags.access)\n    ) {\n      return \"#d0d0d0\";\n    } else if (\n      \"fee\" in tags &&\n      typeof tags.fee === \"string\" &&\n      tags.fee !== \"no\"\n    ) {\n      return \"gold\";\n    }\n\n    return \"white\";\n  }\n\n  addAmenitiesMarkers = (nodes: OpenStreetMapNode[]) => {\n    // public showers\n    this.addMarkers(\n      nodes.filter(node => node.tags.amenity === \"shower\"),\n      this.publicShowersNodes,\n      (node: OpenStreetMapNode) => (\n        <PublicShowerMarker color={this.color(node.tags)} />\n      ),\n      this.publicShowersMarkers,\n      this.state.showShowers\n    );\n\n    // drinking_water\n    this.addMarkers(\n      nodes.filter(node => node.tags.amenity === \"drinking_water\"),\n      this.drinkingWaterNodes,\n      () => <DrinkingWaterMarker />,\n      this.drinkingWaterMarkers,\n      this.state.showDrinkingWater\n    );\n\n    // toilets\n    this.addMarkers(\n      nodes.filter(node => node.tags.amenity === \"toilets\"),\n      this.publicToiletsNodes,\n      (node: OpenStreetMapNode) => (\n        <PublicToiletsMarker color={this.color(node.tags)} />\n      ),\n      this.publicToiletsMarkers,\n      this.state.showToilets\n    );\n  };\n\n  showRadius() {\n    map<mapboxgl.Map, void>(map => {\n      const center = {\n        lat: map.getCenter().lat,\n        lng: map.getCenter().lng\n      };\n\n      if (this.circleRadius) {\n        this.circleRadius.setCenter(center);\n\n        this.circleRadius.setRadius(this.state.around);\n      } else {\n        this.circleRadius = new MapboxCircle(center, this.state.around, {\n          editable: false,\n          minRadius: 0,\n          fillColor: \"transparent\"\n        }).addTo(map);\n      }\n    })(this.map);\n  }\n\n  hideRadius() {\n    this.circleRadius.remove();\n    this.circleRadius = null;\n  }\n\n  componentDidMount() {\n    // initialize \"around\" radius\n    localforage\n      .getItem<number>(\"around\")\n      .then(around => this.setState({ around: around || 1000 }));\n\n    // initialize \"showRadius\" option\n    localforage.getItem<boolean>(\"showRadius\").then(showRadius => {\n      this.setState({ showRadius: showRadius === null ? true : showRadius });\n\n      if (showRadius) {\n        this.showRadius();\n      }\n    });\n\n    // initialize \"continousSearch\" option\n    localforage\n      .getItem<boolean>(\"continousSearch\")\n      .then(continousSearch =>\n        this.setState({ continousSearch: continousSearch || false })\n      );\n\n    // initialize map\n    this.initializeMap();\n\n    // edit node cb\n    (window as any).editNode = (nodeId: string) => {\n      localforage.getItem<OpenStreetMapNode[]>(\"amenities\").then(items => {\n        const node = items?.find(i => String(i.id) === nodeId);\n\n        this.setState({\n          upsertNode: (node || null) as any\n        });\n      });\n    };\n  }\n\n  componentDidUpdate() {\n    requestAnimationFrame(() => {\n      map<mapboxgl.Map, void>(map => map.resize())(this.map);\n    });\n  }\n\n  render() {\n    return (\n      <View style={{ height: \"100%\", width: \"100%\" }} column>\n        <View>\n          <LoadingBar ref={this.loadingBarRef} color=\"lightgreen\" height={8} />\n        </View>\n\n        <View grow id=\"map\" />\n\n        {this.state.showSearchThisAreaButton && (\n          <View\n            className=\"search-this-area-button\"\n            vAlignContent=\"center\"\n            hAlignContent=\"center\"\n            onClick={() => {\n              map<mapboxgl.Map, void>(map => {\n                this.previousCenter = map.getCenter();\n                this.updateAmenities();\n\n                this.setState({ showSearchThisAreaButton: false });\n              })(this.map);\n            }}\n          >\n            Search this area\n          </View>\n        )}\n\n        {this.state.upsertNode && (\n          <UpsertNodePopup\n            onClose={() => {\n              this.setState({ upsertNode: null });\n            }}\n            node={this.state.upsertNode}\n          />\n        )}\n\n        <View\n          className=\"menu-button\"\n          hAlignContent=\"center\"\n          vAlignContent=\"center\"\n          onClick={() => this.setState({ isMenuOpen: true })}\n        >\n          <MenuIcon />\n\n          {/* popup */}\n          <Popup\n            onClose={() => {\n              this.setState({ isMenuOpen: false });\n            }}\n            isOpen={this.state.isMenuOpen}\n          >\n            <span className=\"menu-item-label\">\n              Around radius: <b>{this.state.around} meters</b>\n            </span>\n            <input\n              value={this.state.around}\n              type=\"range\"\n              min=\"500\"\n              max=\"15000\"\n              step=\"500\"\n              onChange={e => {\n                const around = parseInt(e.currentTarget.value) || 1000;\n\n                this.setState({ around });\n                localforage.setItem(\"around\", around);\n              }}\n            />\n\n            <View height={24} />\n\n            <View className=\"separator\" />\n\n            <Checkbox\n              value={this.state.showRadius}\n              label=\"Show radius in map\"\n              onChange={showRadius => {\n                this.setState({ showRadius });\n                localforage.setItem(\"showRadius\", showRadius);\n\n                if (showRadius) {\n                  this.showRadius();\n                } else {\n                  this.hideRadius();\n                }\n              }}\n            />\n\n            <View className=\"separator\" />\n\n            <Checkbox\n              value={this.state.continousSearch}\n              label=\"Enable continous search\"\n              onChange={continousSearch => {\n                this.setState({\n                  continousSearch,\n                  showSearchThisAreaButton: false\n                });\n                localforage.setItem(\"continousSearch\", continousSearch);\n              }}\n            />\n\n            <View className=\"separator\" />\n\n            <Checkbox\n              value={this.state.showDrinkingWater}\n              label='Show \"drinking water\"'\n              onChange={showDrinkingWater => {\n                this.setState({ showDrinkingWater });\n\n                map<mapboxgl.Map, void>(map => {\n                  if (showDrinkingWater) {\n                    this.drinkingWaterMarkers.forEach(marker =>\n                      marker.addTo(map)\n                    );\n                  } else {\n                    this.drinkingWaterMarkers.forEach(marker =>\n                      marker.remove()\n                    );\n                  }\n                })(this.map);\n              }}\n            />\n\n            <Checkbox\n              value={this.state.showToilets}\n              label='Show \"toilets\"'\n              onChange={showToilets => {\n                this.setState({ showToilets });\n\n                map<mapboxgl.Map, void>(map => {\n                  if (showToilets) {\n                    this.publicToiletsMarkers.forEach(marker =>\n                      marker.addTo(map)\n                    );\n                  } else {\n                    this.publicToiletsMarkers.forEach(marker =>\n                      marker.remove()\n                    );\n                  }\n                })(this.map);\n              }}\n            />\n\n            <Checkbox\n              value={this.state.showShowers}\n              label='Show \"showers\"'\n              onChange={showShowers => {\n                this.setState({ showShowers });\n\n                map<mapboxgl.Map, void>(map => {\n                  if (showShowers) {\n                    this.publicShowersMarkers.forEach(marker =>\n                      marker.addTo(map)\n                    );\n                  } else {\n                    this.publicShowersMarkers.forEach(marker =>\n                      marker.remove()\n                    );\n                  }\n                })(this.map);\n              }}\n            />\n          </Popup>\n        </View>\n      </View>\n    );\n  }\n}\n\nexport default MapFountains;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (\"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl, { scope: \"/fontanelle/\" })\n    .then(registration => {\n      console.log(registration.scope);\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { FC, useEffect } from \"react\";\nimport * as serviceWorker from \"./serviceWorkerRegistration\";\nimport View from \"react-flexview\";\nimport { none, Option, fromNullable, map } from \"fp-ts/lib/Option\";\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nconst ServiceWorkerWrapper: FC = () => {\n  const [showReload, setShowReload] = React.useState(false);\n  const [waitingWorker, setWaitingWorker] =\n    React.useState<Option<ServiceWorker>>(none);\n\n  const onSWUpdate = (registration: ServiceWorkerRegistration) => {\n    setShowReload(true);\n    setWaitingWorker(fromNullable(registration.waiting));\n  };\n\n  useEffect(() => {\n    serviceWorker.register({ onUpdate: onSWUpdate });\n  }, []);\n\n  const reloadPage = () => {\n    console.log(\"reload page\");\n    map<ServiceWorker, void>(ww => ww.postMessage({ type: \"SKIP_WAITING\" }))(\n      waitingWorker\n    );\n    setShowReload(false);\n    window.location.reload();\n  };\n\n  return showReload ? (\n    <View\n      className=\"updateAvailable\"\n      vAlignContent=\"center\"\n      hAlignContent=\"center\"\n      style={{\n        background: \"lightgreen\",\n        height: 40,\n        color: \"black\",\n        position: \"fixed\",\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 9999999999999\n      }}\n    >\n      Update Available:\n      <span\n        style={{\n          marginLeft: 32,\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        }}\n        onClick={() => reloadPage()}\n      >\n        Install\n      </span>\n      <span\n        style={{\n          marginLeft: 32,\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        }}\n        onClick={() => {\n          console.log(\"ignore\");\n          setShowReload(false);\n        }}\n      >\n        Ignore\n      </span>\n    </View>\n  ) : null;\n};\n\nexport default ServiceWorkerWrapper;\n","import React from \"react\";\nimport Map from \"./Map\";\nimport View from \"react-flexview\";\nimport ServiceWorkerWrapper from \"./ServiceWorkerWrapper\";\n\nfunction App() {\n  return (\n    <View className=\"App\" style={{ height: \"100vh\", width: \"100vw\" }} column>\n      <ServiceWorkerWrapper />\n      <Map />\n    </View>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}