{"version":3,"sources":["roundGeoCoordinate.ts","getOpenStreetMapAmenities.ts","DrinkingWaterMarker.tsx","PublicToiletsMarker.tsx","PublicShowerMarker.tsx","Map.tsx","serviceWorkerRegistration.ts","ServiceWorkerWrapper.tsx","App.tsx","index.tsx"],"names":["geoCoordinate","Math","round","amenities","options","a","roundedLat","roundGeoCoordinate","lat","roundedLng","lng","formData","join","around","fetch","res","json","localforage","cachedItems","nodes","uniqBy","concat","elements","i","id","width","height","viewBox","enableBackground","xmlSpace","fill","cx","cy","r","d","transform","rx","ry","props","style","background","color","borderRadius","points","mapboxgl","window","MapFountains","map","none","drinkingWaterNodes","drinkingWaterMarkers","publicToiletsNodes","publicToiletsMarkers","publicShowersNodes","publicShowersMarkers","updateAmenities","getItem","then","items","addAmenitiesMarkers","getOpenStreetMapAmenities","getCenter","updateAmenitiesDebounce","debounce","addMarkers","cacheMap","markerElement","cachedMarkers","filter","node","distance","lon","units","forEach","element","document","createElement","ReactDOM","marker","Marker","setLngLat","popup","Popup","offset","setHTML","Object","keys","tags","k","mapillary","setPopup","addTo","push","amenity","DrinkingWaterMarker","PublicToiletsMarker","fee","PublicShowerMarker","accessToken","navigator","geolocation","getCurrentPosition","e","Map","container","center","coords","latitude","longitude","zoom","scrollZoom","addControl","GeolocateControl","positionOptions","enableHighAccuracy","trackUserLocation","ScaleControl","on","some","querySelector","click","this","initializeMap","requestAnimationFrame","resize","grow","React","isLocalhost","Boolean","location","hostname","match","register","config","URL","process","href","origin","addEventListener","swUrl","headers","response","contentType","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","scope","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ServiceWorkerWrapper","useState","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","fromNullable","waiting","useEffect","className","vAlignContent","hAlignContent","marginLeft","textDecoration","cursor","onClick","ww","postMessage","type","App","column","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c8e26d9.chunk.js","sourcesContent":["// round to .x5 (ex: 45.227 -> 45.25; 45.221 -> 45.20)\nexport default (geoCoordinate: number) => {\n  // return (Math.round((geoCoordinate * 100) / 5) * 5) / 100;\n\n  return Math.round(geoCoordinate * 100) / 100;\n};\n","import roundGeoCoordinate from \"./roundGeoCoordinate\";\nimport * as localforage from \"localforage\";\nimport uniqBy from \"lodash/uniqBy\";\n\nimport \"localforage-getitems\";\n\nexport type OpenStreetMapNode = {\n  id: number;\n  lat: number;\n  lon: number;\n  tags: { [k: string]: string; amenity: Amenity };\n};\n\nconst amenities = [\"drinking_water\", \"toilets\", \"shower\"] as const;\n\nexport type Amenity = typeof amenities[number];\n\nexport type Options = {\n  around: number;\n  lat: number;\n  lng: number;\n};\n\nexport default async (options: Options): Promise<OpenStreetMapNode[]> => {\n  const roundedLat = roundGeoCoordinate(options.lat);\n  const roundedLng = roundGeoCoordinate(options.lng);\n\n  const formData = `\n    [out:json];\n    (node[\"amenity\"~\"${amenities.join(\"|\")}\"](around:${\n    options.around\n  },${roundedLat},${roundedLng}););\n    out;>;out;\n  `;\n\n  // const OverpassApiService = 'https://overpass-api.de/api/interpreter'\n  const OverpassApiService = \"https://overpass.kumi.systems/api/interpreter\";\n\n  const res = await fetch(`${OverpassApiService}?data=${formData}&output`);\n\n  const json: { elements: OpenStreetMapNode[] } = await res.json();\n\n  const cachedItems =\n    (await localforage.getItem<OpenStreetMapNode[]>(\"amenities\")) || [];\n\n  const nodes = uniqBy(cachedItems.concat(json.elements), i => i.id);\n\n  // fire&forget\n  localforage.setItem(\"amenities\", nodes);\n\n  return nodes;\n};\n","import * as React from \"react\";\n\nexport default () => (\n  <svg\n    width=\"20px\"\n    height=\"20px\"\n    viewBox=\"0 0 508 508\"\n    enableBackground=\"new 0 0 508 508\"\n    xmlSpace=\"preserve\"\n  >\n    <circle fill=\"#324A5E\" cx=\"254\" cy=\"254\" r=\"254\" />\n    <path\n      fill=\"#54C0EB\"\n      d=\"M252,414h4c62.8,0,115.2-50.4,114-113.2c0-8-1.2-15.6-2.8-22.8C360,246.4,324,210,298,170.8  c-27.2-37.6-44-77.6-44-76.4c-0.4-0.8-17.2,39.2-44,76.4c-25.6,39.2-62,76-69.2,106.8c-2,7.2-2.8,14.8-2.8,22.8  C136.8,363.2,189.2,414,252,414z\"\n    />\n    <g>\n      <path\n        fill=\"#84DBFF\"\n        d=\"M177.2,353.6c6-0.4,9.6-6,7.2-10.8c-3.2-7.2-6-14.8-7.2-22.8c-1.6-8-2-15.6-1.6-23.2   c1.2-32,32-75.2,51.6-118.4c2-3.6,3.6-7.6,5.2-11.2c-0.8,1.2-1.6,2.4-2.4,3.2c-26.4,40.4-64,78.8-70.8,110   c-1.6,7.2-2.4,15.2-2.4,23.2c0.4,16.8,4.8,32,12.4,46C171.2,352.4,174,354,177.2,353.6L177.2,353.6z\"\n      />\n\n      <ellipse\n        transform=\"matrix(-0.042 -0.9991 0.9991 -0.042 -169.3631 569.6013)\"\n        fill=\"#84DBFF\"\n        cx=\"188.401\"\n        cy=\"365.998\"\n        rx=\"8.4\"\n        ry=\"9.2\"\n      />\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\n\nexport default (props: { color?: string }) => (\n  <svg\n    width=\"20px\"\n    height=\"20px\"\n    viewBox=\"0 0 395 395\"\n    xmlSpace=\"preserve\"\n    fill=\"black\"\n    style={{ background: props.color || \"white\", borderRadius: 3 }}\n  >\n    <g>\n      <path d=\"M229.412,130.862c-2.405-3.355-6.284-5.346-10.412-5.346h-1.266c-5.524,0-10.424,3.539-12.161,8.782l-27.534,83.09   l-27.662-83.107c-1.743-5.233-6.639-8.765-12.156-8.765h-0.822c-0.051,0-0.104,0.003-0.153,0.003c-0.053,0-0.105-0.003-0.155-0.003   h-0.998c-5.524,0-10.425,3.539-12.163,8.782l-27.533,83.09l-27.661-83.107c-1.742-5.233-6.64-8.765-12.156-8.765h-1.268   c-4.13,0-8.007,1.991-10.414,5.346c-2.407,3.357-3.045,7.669-1.72,11.579l40.125,118.344c1.763,5.201,6.643,8.698,12.135,8.698   h0.53c0.153,0,0.303-0.008,0.455-0.014c0.151,0.006,0.302,0.014,0.454,0.014h0.354c5.5,0,10.386-3.511,12.142-8.721l27.845-82.675   l27.718,82.657c1.751,5.221,6.642,8.739,12.148,8.739h0.527c0.153,0,0.303-0.008,0.456-0.014c0.15,0.006,0.302,0.014,0.454,0.014   h0.355c5.491,0,10.37-3.497,12.134-8.698l40.125-118.344C232.459,138.531,231.818,134.22,229.412,130.862z\" />\n      <path d=\"M347.88,232.295c-4.756-4.416-12.063-4.578-17.01-0.378c-8.521,7.234-19.511,11.218-30.943,11.218   c-26.069,0-47.277-20.51-47.277-45.721c0-25.116,21.208-45.548,47.277-45.548c11.542,0,22.522,3.916,30.921,11.027   c5.087,4.306,12.625,3.995,17.339-0.719l0.427-0.427c2.544-2.542,3.899-6.036,3.74-9.628c-0.161-3.592-1.822-6.952-4.58-9.258   c-13.371-11.184-30.366-17.344-47.848-17.344c-40.598,0-73.628,32.253-73.628,71.898c0,39.739,33.03,72.07,73.628,72.07   c17.454,0,34.493-6.207,47.979-17.48c2.822-2.36,4.495-5.817,4.589-9.494c0.098-3.678-1.393-7.22-4.087-9.723L347.88,232.295z\" />\n      <path d=\"M313.001,0H81.999C36.785,0,0,36.784,0,81.998v230.993C0,358.211,36.785,395,81.999,395h231.002   C358.216,395,395,358.211,395,312.991V81.998C395,36.784,358.216,0,313.001,0z M380,312.991C380,349.94,349.945,380,313.001,380   H81.999C45.056,380,15,349.94,15,312.991V81.998C15,45.055,45.056,15,81.999,15h231.002C349.945,15,380,45.055,380,81.998V312.991z   \" />\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\n\nexport default (props: { color?: string }) => (\n  <svg\n    enableBackground=\"new -0.258 -0.548 123.547 123.539\"\n    xmlSpace=\"preserve\"\n    viewBox=\"-0.258 -0.548 123.547 123.539\"\n    width=\"20px\"\n    height=\"20px\"\n  >\n    <g>\n      <path\n        fill=\"#231F20\"\n        d=\"m109.63 123.6c8.148 0 14.766-6.586 14.766-14.742v-94.02c0-8.156-6.617-14.773-14.766-14.773h-94.013c-8.156 0-14.758 6.617-14.758 14.773v94.016c0 8.156 6.602 14.742 14.758 14.742h94.013z\"\n      />\n      <path\n        fill=\"#FFFFFF\"\n        d=\"m15.617 2.559c-6.758 0-12.258 5.516-12.258 12.281v94.016c0 6.734 5.5 12.234 12.258 12.234h94.016c6.758 0 12.25-5.5 12.25-12.234v-94.02c0-6.766-5.492-12.281-12.25-12.281h-94.013z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m68.344 66.402c6.789 0 12.281-5.5 12.281-12.281 0-6.789-5.492-12.281-12.281-12.281s-12.297 5.492-12.297 12.281c0 6.781 5.508 12.281 12.297 12.281z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m56.766 96.254c0 1.32 1.062 3.055 2.398 3.055v-0.023h5.664v0.023c1.344 0 3.055-1.711 3.055-3.031v-10.446c0-1.32-1.711-3-3.055-3h-5.664c-1.25 0-2.266 1.586-2.398 2.781 8.164 0 8.109 10.641 0 10.641zm-5.149-25.922c1.312-1.273 3.102-2.031 5.055-2.031h24.219l24.367-24.438c5.227-5.25 12.062 1.562 6.836 6.812l-26.741 26.805 0.023 36.602h-32.062v-17.771h-14.484c-3.016 0-5.469-2.445-5.469-5.469 0-1.297 0.438-2.469 1.18-3.422l17.07-17.086z\"\n      />\n      <polygon\n        fill=\"#231F20\"\n        points=\"12.883 22.621 15.859 25.605 30.242 10.902 27.266 7.926 20.742 10.395 17.75 7.418 11.75 13.395 14.727 16.402\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m35.023 69.324c-0.281 1.812 0.969 3.445 2.734 3.688 1.781 0.297 3.469-1 3.688-2.734 0.273-1.805-0.953-3.438-2.742-3.688-1.773-0.266-3.445 0.953-3.68 2.734z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m37.844 61.902c0.242-1.703-0.914-3.266-2.609-3.516-1.695-0.242-3.258 0.93-3.508 2.617-0.242 1.734 0.93 3.242 2.617 3.492 1.679 0.267 3.273-0.929 3.5-2.593z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m34.242 53.535c0.219-1.617-0.867-3.102-2.477-3.352-1.609-0.219-3.086 0.883-3.32 2.492-0.234 1.641 0.867 3.078 2.469 3.32 1.609 0.275 3.109-0.897 3.328-2.46z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m30.641 45.16c0.219-1.516-0.812-2.93-2.344-3.148-1.539-0.219-2.93 0.828-3.148 2.344-0.219 1.531 0.828 2.906 2.344 3.148s2.945-0.859 3.148-2.344z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m27.039 36.785c0.211-1.445-0.781-2.781-2.203-2.977-1.453-0.195-2.766 0.781-2.969 2.219-0.211 1.469 0.766 2.734 2.195 2.977 1.446 0.219 2.782-0.805 2.977-2.219z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m18.57 27.699c-0.211 1.367 0.734 2.562 2.078 2.789 1.344 0.219 2.594-0.758 2.789-2.078 0.195-1.344-0.727-2.609-2.07-2.781-1.383-0.195-2.617 0.726-2.797 2.07z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m47.148 57.512c0.086-1.758 1.602-3.148 3.367-3.055 1.781 0.102 3.141 1.586 3.055 3.398-0.062 1.781-1.586 3.125-3.375 3.023-1.765-0.046-3.148-1.562-3.047-3.366z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m45.117 54.02c-1.68-0.07-3-1.492-2.898-3.219 0.086-1.688 1.523-2.984 3.211-2.906 1.695 0.094 2.977 1.508 2.898 3.219-0.07 1.71-1.508 2.976-3.211 2.906z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m40.055 47.137c-1.602-0.078-2.844-1.414-2.758-3.031 0.086-1.609 1.438-2.852 3.055-2.758 1.594 0.078 2.828 1.445 2.758 3.055-0.063 1.585-1.446 2.827-3.055 2.734z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m34.977 40.277c-1.516-0.078-2.695-1.344-2.609-2.883 0.086-1.516 1.367-2.688 2.891-2.609 1.516 0.07 2.688 1.367 2.609 2.875-0.056 1.516-1.368 2.711-2.891 2.617z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m29.914 33.418c-1.43-0.078-2.555-1.297-2.469-2.734 0.07-1.422 1.281-2.516 2.719-2.469 1.43 0.07 2.539 1.297 2.469 2.734-0.063 1.414-1.297 2.539-2.719 2.469z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m22.516 23.988c0.07-1.336 1.203-2.391 2.562-2.32 1.344 0.055 2.391 1.203 2.32 2.547-0.062 1.336-1.227 2.414-2.562 2.312-1.344-0.07-2.398-1.195-2.32-2.539z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m55.945 43.691c-1.781 0.102-3.328-1.266-3.391-3.047-0.094-1.812 1.305-3.32 3.086-3.398 1.75-0.07 3.281 1.273 3.352 3.102 0.102 1.734-1.258 3.273-3.047 3.343z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m52.078 35.27c0.086 1.633-1.18 3.055-2.859 3.125-1.672 0.07-3.109-1.195-3.18-2.852-0.078-1.688 1.219-3.078 2.891-3.18 1.648-0.07 3.062 1.196 3.148 2.907z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m45.172 30.191c0.07 1.539-1.125 2.859-2.688 2.93-1.562 0.078-2.914-1.125-2.977-2.656-0.078-1.594 1.148-2.906 2.711-2.984 1.532-0.071 2.868 1.124 2.954 2.71z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m38.258 25.113c0.062 1.445-1.047 2.688-2.5 2.734-1.453 0.07-2.711-1.047-2.773-2.492-0.055-1.461 1.078-2.68 2.531-2.758 1.429-0.07 2.672 1.055 2.742 2.516z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m26.469 20.277c-0.07-1.367 0.992-2.516 2.328-2.562 1.336-0.07 2.492 0.977 2.555 2.32s-0.977 2.492-2.32 2.539c-1.344 0.078-2.516-0.976-2.563-2.297z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m32.508 13.762c1.336-0.195 2.602 0.734 2.797 2.078s-0.734 2.609-2.086 2.781c-1.344 0.219-2.602-0.734-2.797-2.078-0.18-1.344 0.758-2.586 2.086-2.781z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m44.117 19.426c0.211 1.414-0.781 2.734-2.195 2.93-1.414 0.219-2.742-0.781-2.938-2.172-0.195-1.414 0.789-2.758 2.195-2.953 1.399-0.196 2.735 0.781 2.938 2.195z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m52.93 22.988c0.227 1.516-0.812 2.883-2.305 3.102-1.484 0.219-2.891-0.828-3.102-2.297-0.203-1.484 0.836-2.875 2.312-3.094 1.477-0.226 2.876 0.805 3.095 2.289z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m61.727 26.582c0.25 1.562-0.852 3-2.414 3.242-1.547 0.219-3.023-0.852-3.227-2.414-0.227-1.562 0.852-3.031 2.398-3.25 1.563-0.242 3.024 0.86 3.243 2.422z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m70.539 30.168c0.25 1.633-0.898 3.148-2.516 3.391-1.633 0.25-3.172-0.898-3.391-2.516-0.219-1.633 0.906-3.172 2.516-3.414 1.633-0.219 3.149 0.906 3.391 2.539z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m79.352 33.754c0.273 1.711-0.922 3.297-2.633 3.539-1.688 0.25-3.297-0.945-3.539-2.633-0.242-1.711 0.93-3.32 2.633-3.562 1.71-0.243 3.296 0.953 3.539 2.656z\"\n      />\n      <path\n        fill=\"#231F20\"\n        d=\"m84.484 34.559c1.781-0.242 3.438 1.008 3.688 2.789 0.266 1.758-0.977 3.414-2.734 3.688-1.789 0.266-3.469-0.977-3.688-2.758-0.273-1.79 0.953-3.446 2.734-3.719z\"\n      />\n    </g>\n  </svg>\n);\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport debounce from \"lodash/debounce\";\nimport View from \"react-flexview\";\nimport { Option, none, some, map } from \"fp-ts/lib/Option\";\nimport getOpenStreetMapAmenities, {\n  OpenStreetMapNode\n} from \"./getOpenStreetMapAmenities\";\nimport DrinkingWaterMarker from \"./DrinkingWaterMarker\";\nimport PublicToiletsMarker from \"./PublicToiletsMarker\";\nimport PublicShowerMarker from \"./PublicShowerMarker\";\nimport distance from \"@turf/distance\";\nimport localforage from \"localforage\";\n\nimport \"./map.scss\";\n\nconst mapboxgl = window.mapboxgl;\n\nclass MapFountains extends React.PureComponent<{}> {\n  map: Option<mapboxgl.Map> = none;\n\n  drinkingWaterNodes: {\n    [id: string]: OpenStreetMapNode;\n  } = {};\n\n  drinkingWaterMarkers: mapboxgl.Marker[] = [];\n\n  publicToiletsNodes: {\n    [id: string]: OpenStreetMapNode;\n  } = {};\n\n  publicToiletsMarkers: mapboxgl.Marker[] = [];\n\n  publicShowersNodes: {\n    [id: string]: OpenStreetMapNode;\n  } = {};\n\n  publicShowersMarkers: mapboxgl.Marker[] = [];\n\n  updateAmenities = () => {\n    map<mapboxgl.Map, void>(map => {\n      localforage.getItem<OpenStreetMapNode[]>(\"amenities\").then(items => {\n        if (items) {\n          this.addAmenitiesMarkers(items);\n        }\n      });\n\n      getOpenStreetMapAmenities({\n        around: 1000,\n        lat: map.getCenter().lat,\n        lng: map.getCenter().lng\n      }).then(this.addAmenitiesMarkers);\n    })(this.map);\n  };\n\n  updateAmenitiesDebounce = debounce(() => {\n    this.updateAmenities();\n  }, 1000);\n\n  initializeMap() {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoiZnJhbmNlc2NvY2lvcmlhIiwiYSI6ImNqcThyejR6ODA2ZDk0M25rZzZjcGo4ZmcifQ.yRWHQbG1dJjDp43d01bBOw\";\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(e => {\n        const map = new mapboxgl.Map({\n          container: \"map\",\n          style:\n            \"mapbox://styles/francescocioria/cjqi3u6lmame92rmw6aw3uyhm?optimize=true\",\n          center: {\n            lat: e.coords.latitude,\n            lng: e.coords.longitude\n          },\n          zoom: 15.0,\n          scrollZoom: false\n        });\n\n        map.addControl(\n          new mapboxgl.GeolocateControl({\n            positionOptions: {\n              enableHighAccuracy: true\n            },\n            trackUserLocation: true\n          })\n        );\n\n        map.addControl(new mapboxgl.ScaleControl());\n\n        map.on(\"load\", () => {\n          this.map = some(map);\n\n          this.updateAmenities();\n\n          (\n            document.querySelector(\".mapboxgl-ctrl-geolocate\") as HTMLElement\n          )?.click();\n        });\n\n        map.on(\"move\", () => {\n          this.updateAmenitiesDebounce();\n        });\n      });\n    }\n  }\n\n  addMarkers = (\n    nodes: OpenStreetMapNode[],\n    cacheMap: { [k: string]: OpenStreetMapNode },\n    markerElement: (node: OpenStreetMapNode) => JSX.Element,\n    cachedMarkers: mapboxgl.Marker[]\n  ) => {\n    map<mapboxgl.Map, void>(map => {\n      const lat = map.getCenter().lat;\n      const lng = map.getCenter().lng;\n\n      nodes\n        .filter(node => {\n          const distanceInKm = distance([lat, lng], [node.lat, node.lon], {\n            units: \"kilometers\"\n          });\n\n          return distanceInKm < 2;\n        })\n        .forEach(node => {\n          if (!cacheMap[node.id]) {\n            const element = document.createElement(\"div\");\n            ReactDOM.render(markerElement(node), element);\n\n            const marker: mapboxgl.Marker = new mapboxgl.Marker({\n              element\n            }).setLngLat([node.lon, node.lat]);\n\n            const popup = new mapboxgl.Popup({ offset: 25 }).setHTML(\n              `<div style=\"overflow-wrap: break-word;\">\n                ${Object.keys(node.tags)\n                  .map(k => `<b>${k}:</b> ${node.tags[k]}`)\n                  .join(\"<br />\")}\n\n                ${\n                  node.tags.mapillary\n                    ? `<button style=\"margin-top: 16px;\">\n                        <a href=\"${node.tags.mapillary}\" target=\"_blank\" rel=\"noopener noreferrer\">\n                          See street view\n                        </a>\n                      </button>`\n                    : \"\"\n                }\n\n                <div>\n                  <button style=\"margin-top: 16px;\">\n                    <a href=\"https://www.openstreetmap.org/edit?node=${\n                      node.id\n                    }\" target=\"_blank\" rel=\"noopener noreferrer\">\n                      Edit node\n                    </a>\n                  </button>\n                </div>\n              </div>\n              `\n            );\n\n            marker.setPopup(popup);\n\n            marker.addTo(map);\n\n            cacheMap[node.id] = node;\n\n            cachedMarkers.push(marker);\n          }\n        });\n    })(this.map);\n  };\n\n  addAmenitiesMarkers = (nodes: OpenStreetMapNode[]) => {\n    // drinking_water\n    this.addMarkers(\n      nodes.filter(node => node.tags.amenity === \"drinking_water\"),\n      this.drinkingWaterNodes,\n      () => <DrinkingWaterMarker />,\n      this.drinkingWaterMarkers\n    );\n\n    // toilets\n    this.addMarkers(\n      nodes.filter(node => node.tags.amenity === \"toilets\"),\n      this.publicToiletsNodes,\n      (node: OpenStreetMapNode) => (\n        <PublicToiletsMarker\n          color={\n            typeof node.tags.fee === \"string\" && node.tags.fee !== \"no\"\n              ? \"gold\"\n              : \"white\"\n          }\n        />\n      ),\n      this.publicToiletsMarkers\n    );\n\n    // public showers\n    this.addMarkers(\n      nodes.filter(node => node.tags.amenity === \"shower\"),\n      this.publicShowersNodes,\n      (node: OpenStreetMapNode) => <PublicShowerMarker />,\n      this.publicShowersMarkers\n    );\n  };\n\n  componentDidMount() {\n    this.initializeMap();\n  }\n\n  componentDidUpdate() {\n    requestAnimationFrame(() => {\n      map<mapboxgl.Map, void>(map => map.resize())(this.map);\n    });\n  }\n\n  render() {\n    return <View grow id=\"map\" />;\n  }\n}\n\nexport default MapFountains;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (\"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl, { scope: \"/fontanelle/\" })\n    .then(registration => {\n      console.log(registration.scope);\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { FC, useEffect } from \"react\";\nimport * as serviceWorker from \"./serviceWorkerRegistration\";\nimport View from \"react-flexview\";\nimport { none, Option, fromNullable, map } from \"fp-ts/lib/Option\";\n\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nconst ServiceWorkerWrapper: FC = () => {\n  const [showReload, setShowReload] = React.useState(false);\n  const [waitingWorker, setWaitingWorker] =\n    React.useState<Option<ServiceWorker>>(none);\n\n  const onSWUpdate = (registration: ServiceWorkerRegistration) => {\n    setShowReload(true);\n    setWaitingWorker(fromNullable(registration.waiting));\n  };\n\n  useEffect(() => {\n    serviceWorker.register({ onUpdate: onSWUpdate });\n  }, []);\n\n  const reloadPage = () => {\n    console.log(\"reload page\");\n    map<ServiceWorker, void>(ww => ww.postMessage({ type: \"SKIP_WAITING\" }))(\n      waitingWorker\n    );\n    setShowReload(false);\n    window.location.reload();\n  };\n\n  return showReload ? (\n    <View\n      className=\"updateAvailable\"\n      vAlignContent=\"center\"\n      hAlignContent=\"center\"\n      style={{\n        background: \"lightgreen\",\n        height: 25,\n        color: \"black\"\n      }}\n    >\n      Update Available\n      <span\n        style={{\n          marginLeft: 60,\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        }}\n        onClick={() => reloadPage()}\n      >\n        Install\n      </span>\n      <span\n        style={{\n          marginLeft: 20,\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        }}\n        onClick={() => {\n          console.log(\"ignore\");\n          setShowReload(false);\n        }}\n      >\n        Ignore\n      </span>\n    </View>\n  ) : null;\n};\n\nexport default ServiceWorkerWrapper;\n","import React from \"react\";\nimport Map from \"./Map\";\nimport View from \"react-flexview\";\nimport ServiceWorkerWrapper from \"./ServiceWorkerWrapper\";\n\nfunction App() {\n  return (\n    <View className=\"App\" style={{ height: \"100vh\", width: \"100vw\" }} column>\n      <ServiceWorkerWrapper />\n      <Map />\n    </View>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}